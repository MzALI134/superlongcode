options:
    # ignore this, this just marks the configuration


    discord: https://dsc.gg/lanced
    # time_format: dd.MM.yyyy HH:mm:ss z (Used in Betas / developer versions)
    time_format: yyyy-MM-dd
    # Time format can cause major bugs if you don't know what it is. I suggest sticking with basic elements, eg: dd mm yyyy, and not to add text unless it has '' around it.
    # eg: dd/MM/yyyy 'at' h:mm a (results: 00/00/0000 at 0:00 GMT)
    
    # Timespan suffixes
    
    legacy_timespans: true
    # if you want timespans to have seconds in them when more than 1 minute is left, then turn this setting on
    
   
    ts_days: -d
    ts_hours: -h
    ts_minutes: -min
    ts_seconds: -s
    # Add "-", it gets replaced with a space
    
    # Warning - TimeSpan and time formats arent the same https://commons.apache.org/proper/commons-lang/apidocs/org/apache/commons/lang3/time/DurationFormatUtils.html

    ban_require_duration: true
    ipban_require_duration: true
    mute_require_duration: true
    ipmute_require_duration: true


    duration_required: &c&l! &cYou must specify a duration.


    # Appears BEFORE the prefix
    silent_prefix: &7(Silent)
    silent_tooltip: &c&oPunishment is silent &4&o[Mod only]
    
    # ALERTS
    # VALID PLACEHOLDERS $moderator, $moderatorPrefix, $reason, $date, $id, $expires, /n
    ban_join: &b&l! &c$playerPrefix&f$player &bhas tried to join whilst banned for $reason &7&o($expires left)
    mute_chat: &b&l! &c$playerPrefix&f$player &bhas tried to speak whilst muted for $reason &7&o($expires left)
    
    
    
    # DISPLAY THINGS
    # VALID PLACEHOLDERS $moderator, $moderatorPrefix, $reason, $date, $id, $expires, $discord (your site), /n, $appealMessage
    banscreen_base: &cYou are banned from this server!&f\n\nBanned on: $date\nBanned by: $moderator\nReason: $reason
    
    banscreen: $base\n\nExpires in: $expires\n$appealMessage
    permanent_banscreen: $base\n\nYou are permanently banned!\n$appealMessage
    
    banscreen_appealmessage: &c


    mutescreen: &c&l! &cYou have been muted for &7$reason%nl%&c&l! &cExpires in &7$expires
    permanent_mutescreen: &c&l! &cYou have been muted for &7$reason%nl%&c&l! &cYour mute will not expire.
    
    
    
    warnscreen: &e&l! &eYou have been warned for &7$reason%nl%&e&l! &eExpires in &7$expires
    kickscreen: Kicked by: $reason
    
    frozen_alert: &cYou have been &lFROZEN&c, await moderator assistance *If you log out, you will be banned*
    unfrozen_alert: &cYou have been &lUNFROZEN&c, you can resume regular gameplay
    
    # Placeholders: \n, $moderator, $moderatorPrefix, $discord
    frozen_screen: &cYou have been frozen! Await moderator assistance.\n&cContact support at &n$discord&c.
    
    # placeholders: $x $prefix, $player
    alts_format: &a$x&f,&7 $prefix&f$player
    alts_format_1: &a$prefix&f$player
    
    
    # TIMES 
    # Appears on banscreen, and mutescreen. Character "-" is replaced with a space (eg: -d will return as "1 d" instead of "1d")
    days: -d
    hours: -h
    minutes: -min
    seconds: -s

    # GENERAL MESSAGES
    permission_message: &cNo permission.
    console_displayname: Console #This appears as CONSOLE in any punish message
    max_duration: 3650 days and 3 seconds
    max_duration_message: &cMaximum duration for your rank reached.
    
    # MAINTaNENCE KICKS
    vipmode: &cThis server is currently in &fVIP &cmode.%nl%%nl%&7You do not have the rank needed to join in this state%nl%&7Make sure to buy a donator rank at *your store here*
    modmode: &cThis server is currently undergoing maintenance!
    
    vipmode_enabled: &a&l! &7$player &ahas enabled a VIP mode
    vipmode_disabled: &a&l! &7$player &ahas disabled a VIP mode

    modmode_enabled: &a&l! &7$player &ahas enabled a STAFF mode
    modmode_disabled: &a&l! &7$player &ahas disabled a STAFF mode
    
    
    maintenance_message: &a---[ &fSelect a mode to toggle &amaintenance ]---
    vipmode_button: &a[VIP ONLY]
    modmode_button: &a[STAFF ONLY]
    
    # BROADCAST
    
    ban_broadcast: &a&l! &7$moderatorPrefix&f$moderator &abanned &f$playerPrefix&f$player&a for $duration for $reason #placeholders: $moderator, $moderatorPrefix, $duration, $player, $playerPrefix, $reason
    permanent_ban_broadcast: &a$moderator &fbanned &a$player&f for '&a$reason&f' #placeholders: $moderator, $moderatorPrefix, $duration, $player, $playerPrefix, $reason
    ipban_broadcast: &a&l! &7$moderatorPrefix&f$moderator &aIP-banned &f$alts&a for $duration for $reason #placeholders: $moderator, $moderatorPrefix, $duration, $player, $playerPrefix, $reason, $alts
    permanent_ipban_broadcast: &a$moderator &fIPbanned &a$player&f for '&a$reason&f' #placeholders: $moderator, $moderatorPrefix, $duration, $player, $playerPrefix, $reason, $alts
    mute_broadcast: &a&l! &7$moderatorPrefix&f$moderator &amuted &f$playerPrefix&f$player&a for $duration for $reason #placeholders: $moderator, $moderatorPrefix, $duration, $player, $playerPrefix, $reason
    permanent_mute_broadcast: &a$moderator &fmuted &a$player&f for '&a$reason&f'
    ipmute_broadcast: &a&l! &7$moderatorPrefix&f$moderator &aIP-Muted &f$alts&a for $duration for $reason #placeholders: $moderator, $moderatorPrefix, $duration, $player, $playerPrefix, $reason, $alts
    permanent_ipmute_broadcast: &a$moderator &fIPmuted &a$player&f for '&a$reason&f' #placeholders: $moderator, $moderatorPrefix, $duration, $player, $playerPrefix, $reason, $accs
    warn_broadcast: &a&l! &7$moderatorPrefix&f$moderator &awarned &a$playerPrefix&f$player&a for $reason #placeholders: $moderator, $moderatorPrefix, $player, $playerPrefix, $reason
    kick_broadcast: &a&l! &7$moderatorPrefix&f$moderator &akicked &a$playerPrefix&f$player&a for $reason #placeholders: $moderator, $moderatorPrefix, $player, $playerPrefix, $reason
    unban_broadcast: &a&l! &7$moderatorPrefix&f$moderator &aunbanned &a$playerPrefix&f$player&a  #placeholders: $moderator, $moderatorPrefix, $player, $playerPrefix
    ipunban_broadcast: &a&l! &7$moderatorPrefix&f$moderator &aIP-unbanned &a$alts #placeholders: $moderator, $moderatorPrefix, $player, $playerPrefix, $reason, $alts
    unmute_broadcast: &a&l! &7$moderatorPrefix&f$moderator &aunmuted &a$playerPrefix&f$player&a #placeholders: $moderator, $moderatorPrefix $player, $playerPrefix
    ipunmute_broadcast: &a&l! &7$moderatorPrefix&f$moderator &aIP-unmuted &a$playerPrefix&f$player&a #placeholders: $moderator, $moderatorPrefix $player, $playerPrefix, $alts
    freeze_broadcast: &a&l! &7$playerPrefix&f$player &awas $typen by &7$moderatorPrefix&f$moderator&a #placeholders: $moderator, $moderatorPrefix, $player, $playerPrefix, $type
    
    
    
    
    
    
    ban_success: &a&l! Punishment successfully issued!
    ipban_success: &a&l! Punishment successfully issued!
    unban_success: &a&l! Punishment successfully issued!
    ipunban_success: &a&l! Punishment successfully issued!
    mute_success: &a&l! Punishment successfully issued!
    ipmute_success: &a&l! Punishment successfully issued!
    unmute_success: &a&l! Punishment successfully issued!
    ipunmute_success: &a&l! Punishment successfully issued!
    warn_success: &a&l! Punishment successfully issued!
    kick_success: &a&l! Punishment successfully issued!


    # USAGE
    ban_usage: &cInvalid command usage! &7&o/ban [IGN] [DURATION] <REASON> <-s>
    tempban_usage: &cInvalid command usage! &7&o/tempban [IGN] [DURATION] <REASON> <-s>
    ipban_usage: &cInvalid command usage! &7&o/ipban [IGN] [DURATION] <REASON> <-s>
    tempipban_usage: &cInvalid command usage! &7&o/tempipban [IGN] [DURATION] <REASON> <-s>
    
    
    mute_usage: &cInvalid command usage!&7&o /mute [IGN] [DURATION] <REASON> <-s>
    tempmute_usage: &cInvalid command usage!&7&o /tempmute [IGN] [DURATION] <REASON> <-s>
    ipmute_usage: &cInvalid command usage! &7&o/ipmute [IGN] [DURATION] <REASON> <-s>
    tempipmute_usage: &cInvalid command usage!&7&o /tempipmute [IGN] [DURATION] <REASON> <-s>
    
    warn_usage: &cInvalid command usage! &7&o/warn [IGN] <REASON> <-s>
    kick_usage: &cInvalid command usage! &7&o/kick [IGN] <REASON> <-s>
    
    
    
    chat_disabled_message: &c&l! &cThe chat has been &7turned off &cby a staff team member, this means you must wait for it to be re-enabled
    chat_disabled_actionbar: &a&l! &aThe chat is disabled, but since you are staff, you bypassed it &a&l!
    
    
    #valid placeholders: $reason, $expires, $type
    already_punished: &c&l! &cThis user is already &7$type&c for $expires for $reason # THE CONFIG BELOW DOES NOT APPLY TO THIS, THAT IS FOR /hist
    
    
    
    # History format
    # THIS DOES NOT APPLY FOR ALREADY_PUNISHED, THIS IS FOR /HISTORY
    ban_type: &cbanned
    ipban_type: &4IP-banned
    # -- [UNBANS] --
    unban_type: &aunbanned
    ipunban_type: &2IP-unbanned
    
    mute_type: &emuted
    ipmute_type: &6IP-muted
    # -- [UNMUTES] --
    unmute_type: &bunmuted
    ipunmute_type: &3IP-unmuted
    
    warn_type: &dwarned
    kick_type: &5kicked
    
    permanent_display: forever
 

    do_join_message: true # I will let you turn this off, because it is the right thing to do. I just hope you leave this on, as it helps get the script out. Thank you for downloading :)
    


    # EXPERIMENTAL
    
    
    # Seperate an Entry in your pastebin raw banlist with "-", seperate a banlist with "|"
    
    banlist_enabled: true # I would suggest keeping this true, as there are no REAL players on the default ban-list
    banlist: https://pastebin.com/raw/tVcK8eQa|https://pastebin.com/raw/xNLXyNPW # This is a Variable which will store every ban-list, make sure you fill out banlist_reasons according to this. Seperate each PasteBin raw link with a | to have a different ban-list
    banlist_reasons: Grr! Bad name!!!|Wait, can this list be infinite!?!
    # These PasteBins do not contain real IGNS, they are just examples. You can have an infinite number of banlist pastebins and an infinite number of players in each banlist. I suggest if you have a list of hackers, put them there, and have basically a massban. 
    
    # This fires on load, so /sk reload [your file name idk] will trigger it. 
    # I suggest adding a `-s` to the end of the reason, or else on the first load, it will broadcast a ton of random igns! 
    
    # I do not plan on intruding on your server, and i will not be adding any globalbans by default, those pastebins just have random igns (impossibly long igns) or examples. 
    # These serve for example purposes. You can put a duration in each reason, but it will essentially be permanent, because of how often this file gets reloaded. I also suggest saving your pastebin links 
    
    # WARNING: If you have a regular pastebin link (eg: https://pastebin.com/xNLXyNPW) replace the ".com/" with ".com/raw/" or else the skript will not properly read the value and screw up

    # Config below:
    alts_divider: &f,
    
    alts_message: &a&l! &aViewing accounts of &a$playerPrefix&f$player &a[&cBanned&a] &a[&eIPBanned&a] &a[&7Offline&a] [&aOnline&a] # $player, $playerPrefix, $ip
    
    alts_banned: &c
    alts_ipbanned: &6
    alts_offline: &7
    alts_online: &a

    who_header: &a&l! &aViewing user information



    # VERY ADVANCED
    # Beginners should not touch this
    
    
    
    
    # WARNING: I do not provide support for ParosBans copies with these settings changed
    
    
    code.prefix.format: %prefix of player%
    code.prefix.format2: prefix of player
    code.handler.ban: kick player due to "%{_banscreen}%" # Fires when the player connects. {_banscreeen} is the banscreen generated
    code.handler.ipban: kick player due to "%{_banscreen}%"
    
    
    
    
     
     
     
    
    


















































































































# NO TOUCHIES >:(

















































































































































































































































    version: 2.6.8












# Final warning, I will not provide support if you EVEN TAMPER a message.










on command with priority monitor:
    if the command is "eban" or "banish" or "blacklist":
        cancel event 
        set {_cmd} to "%full command%"
        replace first "%the command%" with "ban" in {_cmd}
        make executor execute "/%{_cmd}%"
    if the command is "etempban" or "tempbanish" or "tempblacklist":
        cancel event 
        set {_cmd} to "%full command%"
        replace first "%the command%" with "tempban" in {_cmd}
        make executor execute "/%{_cmd}%"
    if the command is "ebanip" or "eipban" or "banip" or "baniship" or "ban-ip" or "blacklistip":
        cancel event 
        set {_cmd} to "%full command%"
        replace first "%the command%" with "ipban" in {_cmd}
        make executor execute "/%{_cmd}%"
    if the command is "etempbanip" or "etempipban" or "tempbaniship" or "tempbanip" or "tempblacklistip" or "tempban-ip":
        cancel event 
        set {_cmd} to "%full command%"
        replace first "%the command%" with "tempipban" in {_cmd}
        make executor execute "/%{_cmd}%"
    if the command is "emute" or "silence":
        cancel event 
        set {_cmd} to "%full command%"
        replace first "%the command%" with "mute" in {_cmd}
        make executor execute "/%{_cmd}%"
    if the command is "eipmute" or "muteip" or "silenceip":
        cancel event 
        set {_cmd} to "%full command%"
        replace first "%the command%" with "ipmute" in {_cmd}
        make executor execute "/%{_cmd}%"
    if the command is "eiptempmute" or "etempmuteip" or "tempmuteip" or "tempsilenceip":
        cancel event 
        set {_cmd} to "%full command%"
        replace first "%the command%" with "tempipmute" in {_cmd}
        make executor execute "/%{_cmd}%"
    if the command is "pardon" or "eunban" or "epardon":
        cancel event 
        set {_cmd} to "%full command%"
        replace first "%the command%" with "unban" in {_cmd}
        make executor execute "/%{_cmd}%"
    if the command is "pardonip" or "ippardon" or "eunbanip" or "epardonip" or "unbanip":
        cancel event 
        set {_cmd} to "%full command%"
        replace first "%the command%" with "ipunban" in {_cmd}
        make executor execute "/%{_cmd}%"
    if the command is "eunmute" or "unsilence":
        cancel event 
        set {_cmd} to "%full command%"
        replace first "%the command%" with "unmute" in {_cmd}
        make executor execute "/%{_cmd}%"
    if the command is "unmuteip" or "eunmuteip" or "unmuteip" or "eipunmute" or "ipunsilence" or "unsilenceip":
        cancel event 
        set {_cmd} to "%full command%"
        replace first "%the command%" with "ipunmute" in {_cmd}
        make executor execute "/%{_cmd}%"
    
    
on join:
    if player has permission "*":
        add uuid of player to {joinedAdmins::*}
    else if player has permission "parosbans.*":
        add uuid of player to {joinedAdmins::*}


on join:
    while player is online:
        if {banned::%uuid of player%} is "true":
            kick player due to "Disconnected"
            stop loop
        if {ipbanned::%ip of player%} is "true":
            kick player due to "Disconnected"
            stop loop
        wait 10 seconds
on load:
    if {@banlist_enabled} is true:
        send "[ParosBans] Loading banlist started" to console
        set {_urls::*} to "{@banlist}" split by "|"
        set {_reasons::*} to "{@banlist_reasons}" split by "|"
        loop {_urls::*}:
            set {_contents} to text from "%loop-value-1%"
            set {_list::*} to "%{_contents}%" split by "-"
            loop {_list::*}:
                execute console command "/ban %loop-value-2% %{_reasons::%loop-index-1%}%" if {_reasons::%loop-index-1%} is set
                broadcast "&c[ParosBans] &4Error whilst loading BanList!" if {_reasons::%loop-index-1%} is not set 
                broadcast "&c[ParosBans] &4&oCould not load banlist position %loop-index-1% fully because there was no reason assigned to said index." if {_reasons::%loop-index-1%} is not set
                stop if {_reasons::%loop-index-1%} is not set
        send "[ParosBans] Loading banlist ended" to console
    else:
        send "[ParosBans] Did &lNOT&r load banlist" to console
            
               
on join:
    set {_djm} to "{@do_join_message}"
    if {_djm} = "true":
        send "&8=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-="
        send "&f &f"
        send "&fThis server runs &aParosBans&f!"
        send formatted "<tooltip:&7set config option 'do_join_messages' to false if you want to disable this><link:https://www.spigotmc.org/resources/parosbans-modern-elite-banning-system-skript.111734/history>&bClick me here to download ParosBans v{@version}!"
        send "&f &f"
        send "&8=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-="


command /parosbans [<text>] [<text>]:
    trigger:
        if arg-1 is not set:
            send "&6ParosBans &arunning on &6{@version} &aby &6Parod1es&a."
            send formatted "&aDownload at:&6 <tooltip:&6&lCLICK TO DOWNLOAD><link:https://www.spigotmc.org/resources/parosbans-modern-elite-banning-system-skript.111734/>Click here!<reset>&a."
        else if arg-1 is "broadcast":
            broadcast "%coloured arg-2%" if player has permission "bcraw.use"
            stop if player has permission "bcraw.use"
            send "{@permission_message}"
        else if arg-1 is "test":
            set {_djm} to "{@do_join_message}"
            if {_djm} = "true":
                send "&8=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-="
                send "&f &f"
                send "&fThis server runs &aParosBans&f!"
                send formatted "<tooltip:&7set config option 'do_join_messages' to false if you want to disable this><link:https://www.spigotmc.org/resources/parosbans-modern-elite-banning-system-skript.111734/history>&bClick me here to download ParosBans v{@version}!"
                send "&f &f"
                send "&8=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-="
            else:
                send "&cYou have join messages off, silly!"
on chat:
    if {chatmuted} is "true":
        if player does not have permission "chat.mute.bypass":
            send "{@chat_disabled_message}"
            log "[CHAT DISABLED] %player% said %message% to channel 'all_chat'" to "%uuid of player%/chat.log"
            cancel event
            stop
        else:
            set action bar of player to "{@chat_disabled_actionbar}"
    if {ipmuted::%{ip::%{uuid::%player%}%}%} is "true":
        set {currentipmutedur::%ip of player%} to difference between {ipmutedateend::%ip of player%} and now
        if {ipmuteduration::%ip of player%} is not "PERMANENT":
            if now is more than {ipmuteduration::%{ip::%{uuid::%player%}%}%} after {ipmutedatebanned::%{ip::%{uuid::%player%}%}%}:
                delete {ipmuted::%{ip::%{uuid::%player%}%}%}
                delete {ipmuteid::%uuid of player%}
        else:
            set {currentipmutedur::%ip of player%} to "{@permanent_display}"
            set {_perma} to "true"
        set {id::*} to "A", "B", "C", "D", "E", "F" and "G"
        set {id1::*} to "A", "E", "Z", "O", "F", "P" and "L"
        set {id2::*} to "A", "D", "Z", "F", "E", "G" and "R"
        set {_gen} to random element out of {id::*}
        set {_gen1} to random element out of {id1::*}
        set {_gen2} to random element out of {id2::*}
        set {_gen3} to random number between 1 and 5
        set {_gen3} to round({_gen3})
        set {_gen4} to random number between 1 and 9999
        set {_gen4} to round({_gen4})
        set {_gen5} to random number between 10 and 999
        set {_gen5} to round({_gen5})
        set {ipmuteid::%uuid of player%} to "%{_gen3}%%{_gen}%%{_gen5}%%{_gen1}%%{_gen4}%" if {ipmuteid::%uuid of player%} is not set
        delete {id::*}
        delete {id1::*}
        delete {id2::*}
        if {ipmuteduration::%ip of player%} is not "PERMANENT":
            set {_banscreen} to "{@mutescreen}"
            replace all "$playerPrefix" with "{@code.prefix.format}" in {_banscreen}
            replace all "$player" with "%player%" in {_banscreen}
            replace all "$discord" with "{@discord}" in {_banscreen}
            replace all "$moderatorPrefix" with "%{prefix::%{uuid::%{ipmutemoderator::%ip of player%}%}%}%" in {_banscreen}
            replace all "$moderator" with "%{ipmutemoderator::%ip of player%}%" in {_banscreen}
            replace all "$reason" with "%coloured {ipmutereason::%ip of player%}%" in {_banscreen}
            replace all "$date" with "%{ipmutedatebanned::%ip of player%}%" in {_banscreen}
            set {_displaytime} to {currentipmutedur::%ip of player%} in seconds
            if {@legacy_timespans} is true:
                set {_displaytime} to {_displaytime} seconds formatted as "d'{@ts_days}' H'{@ts_hours}' m'{@ts_minutes}' s'{@ts_seconds}'"
                set {_dt::*} to {_displaytime} split by " "
                replace all "0{@ts_days} " with "" in {_displaytime} if {_dt::1} is "0{@ts_days}"
                replace all "0{@ts_hours} " with "" in {_displaytime} if {_dt::2} is "0{@ts_hours}"
                replace all "0{@ts_minutes} " with "" in {_displaytime} if {_dt::3} is "0{@ts_minutes}"
                replace all " 0{@ts_seconds}" with "" in {_displaytime} if {_dt::4} is "0{@ts_seconds}"
            else:
                if {currentipdur::%ip of player%} is less than 1 minute:
                    set {_displaytime} to {_displaytime} seconds formatted as "s'{@ts_seconds}'"
                else:
                    set {_displaytime} to {_displaytime} seconds formatted as "d'{@ts_days}' H'{@ts_hours}' m'{@ts_minutes}'"
                    set {_dt::*} to {_displaytime} split by " "
                    replace all "0{@ts_days} " with "" in {_displaytime} if {_dt::1} is "0{@ts_days}"
                    replace all "0{@ts_hours} " with "" in {_displaytime} if {_dt::2} is "0{@ts_hours}"
                    replace all " 0{@ts_minutes}" with "" in {_displaytime} if {_dt::3} is "0{@ts_minutes}"
            replace all "-" with " " in {_displaytime}
            replace all "$expires" with "%{_displaytime}%" in {_banscreen}
            replace all "$id" with "%{muteid::%uuid of player%}%" in {_banscreen}
            send "%{_banscreen}%" # $moderator, $reason, $date, $id, $expires
        else:
            set {_banscreen} to "{@permanent_mutescreen}"
            replace all "$playerPrefix" with "{@code.prefix.format}" in {_banscreen}
            replace all "$player" with "%player%" in {_banscreen}
            replace all "$discord" with "{@discord}" in {_banscreen}
            replace all "$moderatorPrefix" with "%{prefix::%{uuid::%{ipmutemoderator::%ip of player%}%}%}%" in {_banscreen}
            replace all "$moderator" with "%{ipmutemoderator::%ip of player%}%" in {_banscreen}
            replace all "$reason" with "%coloured {ipmutereason::%ip of player%}%" in {_banscreen}
            replace all "$date" with "%{ipmutedatebanned::%ip of player%}%" in {_banscreen}
            replace all "$expires" with "{@permanent_display}" in {_banscreen}
            replace all "$id" with "%{muteid::%uuid of player%}%" in {_banscreen}
            send "%{_banscreen}%" # $moderator, $reason, $date, $id, $expires
        cancel event
        if {mutedchatdate::%uuid of player%} is set:
            if now is not more than 2 minutes from {mutedchatdate::%uuid of player%}:
                set {_} to "true"
        if {_} is not "true":
            set {mutedchatdate::%uuid of player%} to now
            set {_banscreen} to "{@mute_chat}"
            replace all "$playerPrefix" with "{@code.prefix.format}" in {_banscreen}
            replace all "$player" with "%player%" in {_banscreen}
            replace all "$moderatorPrefix" with "%{prefix::%{uuid::%{ipmutemoderator::%ip of player%}%}%}%" in {_banscreen}
            replace all "$moderator" with "%{ipmutemoderator::%ip of player%}%" in {_banscreen}
            replace all "$reason" with "%coloured {ipmutereason::%ip of player%}%" in {_banscreen}
            replace all "$date" with "%{ipmutedatebanned::%ip of player%}%" in {_banscreen}
            set {_displaytime} to {currentipmutedur::%ip of player%} in seconds
            if {@legacy_timespans} is true:
                set {_displaytime} to {_displaytime} seconds formatted as "d'{@ts_days}' H'{@ts_hours}' m'{@ts_minutes}' s'{@ts_seconds}'"
                set {_dt::*} to {_displaytime} split by " "
                replace all "0{@ts_days} " with "" in {_displaytime} if {_dt::1} is "0{@ts_days}"
                replace all "0{@ts_hours} " with "" in {_displaytime} if {_dt::2} is "0{@ts_hours}"
                replace all "0{@ts_minutes} " with "" in {_displaytime} if {_dt::3} is "0{@ts_minutes}"
                replace all " 0{@ts_seconds}" with "" in {_displaytime} if {_dt::4} is "0{@ts_seconds}"
            else:
                if {currentipdur::%ip of player%} is less than 1 minute:
                    set {_displaytime} to {_displaytime} seconds formatted as "s'{@ts_seconds}'"
                else:
                    set {_displaytime} to {_displaytime} seconds formatted as "d'{@ts_days}' H'{@ts_hours}' m'{@ts_minutes}'"
                    set {_dt::*} to {_displaytime} split by " "
                    replace all "0{@ts_days} " with "" in {_displaytime} if {_dt::1} is "0{@ts_days}"
                    replace all "0{@ts_hours} " with "" in {_displaytime} if {_dt::2} is "0{@ts_hours}"
                    replace all " 0{@ts_minutes}" with "" in {_displaytime} if {_dt::3} is "0{@ts_minutes}"
            replace all "-" with " " in {_displaytime}
            set {_dt::*} to {_displaytime} split by " "
            replace all "0{@ts_days} " with "" in {_displaytime} if {_dt::1} is "0{@ts_days}"
            replace all "0{@ts_hours} " with "" in {_displaytime} if {_dt::2} is "0{@ts_hours}"
            replace all "0{@ts_minutes} " with "" in {_displaytime} if {_dt::3} is "0{@ts_minutes}"
            replace all " 0{@ts_seconds}" with "" in {_displaytime} if {_dt::4} is "0{@ts_seconds}"
            replace all "-" with " " in {_displaytime}
            replace all "$expires" with "%{_displaytime}%" in {_banscreen}
            replace all "$id" with "%{ipmuteid::%uuid of player%}%" in {_banscreen}
            loop all players:
                if loop-player has permission "mute.use":
                    send "%{_banscreen}%" to loop-player
        stop
    if {muted::%uuid of player%} is "true":
        set {currentmutedur::%uuid of player%} to difference between {mutedateend::%uuid of player%} and now
        if {muteduration::%uuid of player%} is not "PERMANENT":
            if now is more than {muteduration::%uuid of player%} after {datemuted2::%{uuid::%player%}%}:
                delete {muted::%uuid of player%}
                delete {muteid::%uuid of player%}
        else:
            set {currentmutedur::%uuid of player%} to "{@permanent_display}"
        set {id::*} to "A", "B", "C", "D", "E", "F" and "G"
        set {id1::*} to "A", "E", "Z", "O", "F", "P" and "L"
        set {id2::*} to "A", "D", "Z", "F", "E", "G" and "R"
        set {_gen} to random element out of {id::*}
        set {_gen1} to random element out of {id1::*}
        set {_gen2} to random element out of {id2::*}
        set {_gen3} to random number between 1 and 5
        set {_gen3} to round({_gen3})
        set {_gen4} to random number between 1 and 9999
        set {_gen4} to round({_gen4})
        set {_gen5} to random number between 10 and 999
        set {_gen5} to round({_gen5})
        set {muteid::%uuid of player%} to "%{_gen3}%%{_gen}%%{_gen5}%%{_gen1}%%{_gen4}%" if {muteid::%uuid of player%} is not set
        delete {id::*}
        delete {id1::*}
        delete {id2::*}
        if {muteduration::%uuid of player%} is not "PERMANENT":
            set {_banscreen} to "{@mutescreen}"
            replace all "$playerPrefix" with "{@code.prefix.format}" in {_banscreen}
            replace all "$player" with "%player%" in {_banscreen}
            replace all "$discord" with "{@discord}" in {_banscreen}
            replace all "$moderatorPrefix" with "%{prefix::%{uuid::%{mutemoderator::%uuid of player%}%}%}%" in {_banscreen}
            replace all "$moderator" with "%{mutemoderator::%uuid of player%}%" in {_banscreen}
            replace all "$reason" with "%coloured {mutereason::%uuid of player%}%" in {_banscreen}
            replace all "$date" with "%{datemuted::%uuid of player%}%" in {_banscreen}
            set {_displaytime} to {currentmutedur::%uuid of player%} in seconds
            if {@legacy_timespans} is true:
                set {_displaytime} to {_displaytime} seconds formatted as "d'{@ts_days}' H'{@ts_hours}' m'{@ts_minutes}' s'{@ts_seconds}'"
                set {_dt::*} to {_displaytime} split by " "
                replace all "0{@ts_days} " with "" in {_displaytime} if {_dt::1} is "0{@ts_days}"
                replace all "0{@ts_hours} " with "" in {_displaytime} if {_dt::2} is "0{@ts_hours}"
                replace all "0{@ts_minutes} " with "" in {_displaytime} if {_dt::3} is "0{@ts_minutes}"
                replace all " 0{@ts_seconds}" with "" in {_displaytime} if {_dt::4} is "0{@ts_seconds}"
            else:
                if {currentmutedur::%uuid of player%} is less than 1 minute:
                    set {_displaytime} to {_displaytime} seconds formatted as "s'{@ts_seconds}'"
                else:
                    set {_displaytime} to {_displaytime} seconds formatted as "d'{@ts_days}' H'{@ts_hours}' m'{@ts_minutes}'"
                    set {_dt::*} to {_displaytime} split by " "
                    replace all "0{@ts_days} " with "" in {_displaytime} if {_dt::1} is "0{@ts_days}"
                    replace all "0{@ts_hours} " with "" in {_displaytime} if {_dt::2} is "0{@ts_hours}"
                    replace all " 0{@ts_minutes}" with "" in {_displaytime} if {_dt::3} is "0{@ts_minutes}"
            replace all "-" with " " in {_displaytime}
            set {_dt::*} to {_displaytime} split by " "
            replace all "0{@ts_days} " with "" in {_displaytime} if {_dt::1} is "0{@ts_days}"
            replace all "0{@ts_hours} " with "" in {_displaytime} if {_dt::2} is "0{@ts_hours}"
            replace all "0{@ts_minutes} " with "" in {_displaytime} if {_dt::3} is "0{@ts_minutes}"
            replace all " 0{@ts_seconds}" with "" in {_displaytime} if {_dt::4} is "0{@ts_seconds}"
            replace all "-" with " " in {_displaytime}
            replace all "$expires" with "%{_displaytime}%" in {_banscreen}
            replace all "$id" with "%{muteid::%uuid of player%}%" in {_banscreen}
            send "%{_banscreen}%" # $moderator, $reason, $date, $id, $expires
        else:
            set {_banscreen} to "{@permanent_mutescreen}"
            replace all "$playerPrefix" with "{@code.prefix.format}" in {_banscreen}
            replace all "$player" with "%player%" in {_banscreen}
            replace all "$discord" with "{@discord}" in {_banscreen}
            replace all "$moderatorPrefix" with "%{prefix::%{uuid::%{mutemoderator::%uuid of player%}%}%}%" in {_banscreen}
            replace all "$moderator" with "%{mutemoderator::%uuid of player%}%" in {_banscreen}
            replace all "$reason" with "%coloured {mutereason::%uuid of player%}%" in {_banscreen}
            replace all "$date" with "%{datemuted::%uuid of player%}%" in {_banscreen}
            replace all "$expires" with "{@permanent_display}" in {_banscreen}
            replace all "$id" with "%{muteid::%uuid of player%}%" in {_banscreen}
            send "%{_banscreen}%" # $moderator, $reason, $date, $id, $expires
        cancel event
        delete {_}
        if {mutedchatdate::%uuid of player%} is set:
            if now is not more than 2 minutes from {mutedchatdate::%uuid of player%}:
                set {_} to "true"
        if {_} is not "true":
            set {mutedchatdate::%uuid of player%} to now
            set {_banscreen} to "{@mute_chat}"
            replace all "$playerPrefix" with "{@code.prefix.format}" in {_banscreen}
            replace all "$player" with "%player%" in {_banscreen}
            replace all "$moderatorPrefix" with "%{prefix::%{uuid::%{mutemoderator::%uuid of player%}%}%}%" in {_banscreen}
            replace all "$moderator" with "%{mutemoderator::%uuid of player%}%" in {_banscreen}
            replace all "$reason" with "%coloured {mutereason::%uuid of player%}%" in {_banscreen}
            replace all "$date" with "%{datemuted::%uuid of player%}%" in {_banscreen}
            set {_displaytime} to {currentmutedur::%uuid of player%} in seconds
            if {@legacy_timespans} is true:
                set {_displaytime} to {_displaytime} seconds formatted as "d'{@ts_days}' H'{@ts_hours}' m'{@ts_minutes}' s'{@ts_seconds}'"
                set {_dt::*} to {_displaytime} split by " "
                replace all "0{@ts_days} " with "" in {_displaytime} if {_dt::1} is "0{@ts_days}"
                replace all "0{@ts_hours} " with "" in {_displaytime} if {_dt::2} is "0{@ts_hours}"
                replace all "0{@ts_minutes} " with "" in {_displaytime} if {_dt::3} is "0{@ts_minutes}"
                replace all " 0{@ts_seconds}" with "" in {_displaytime} if {_dt::4} is "0{@ts_seconds}"
            else:
                if {currentmutedur::%uuid of player%} is less than 1 minute:
                    set {_displaytime} to {_displaytime} seconds formatted as "s'{@ts_seconds}'"
                else:
                    set {_displaytime} to {_displaytime} seconds formatted as "d'{@ts_days}' H'{@ts_hours}' m'{@ts_minutes}'"
                    set {_dt::*} to {_displaytime} split by " "
                    replace all "0{@ts_days} " with "" in {_displaytime} if {_dt::1} is "0{@ts_days}"
                    replace all "0{@ts_hours} " with "" in {_displaytime} if {_dt::2} is "0{@ts_hours}"
                    replace all " 0{@ts_minutes}" with "" in {_displaytime} if {_dt::3} is "0{@ts_minutes}"
            replace all "-" with " " in {_displaytime}
            replace all "$expires" with "%{_displaytime}%" in {_banscreen}
            replace all "$id" with "%{muteid::%uuid of player%}%" in {_banscreen}
            loop all players:
                if loop-player has permission "mute.use":
                    send "%{_banscreen}%" to loop-player
        stop


on join:
    set {uuid::%player%} to uuid of player
    if {alts::%ip of player%::*} does not contain "%{uuid::%player%}%":
        add "%uuid of player%" to {alts::%ip of player%::*}
    set {ign::%uuid of player%} to player
    set {prefix::%uuid of player%} to {@code.prefix.format2}
    set {ip::%uuid of player%} to ip of player
    set {status::%uuid of player%} to "Online"
    if {banned::%uuid of player%} is "true":
        set {status::%uuid of player%} to "Banned"
    if {ipbanned::%ip of player%} is "true":
        set {status::%uuid of player%} to "IP-Banned"
on quit:
    set {prefix::%uuid of player%} to {@code.prefix.format2}
    set {status::%uuid of player%} to "Offline"
    if {banned::%uuid of player%} is "true":
        set {status::%uuid of player%} to "Banned"
    if {ipbanned::%ip of player%} is "true":
        set {status::%uuid of player%} to "IP-Banned"
on file rename:
    cancel event
command /clearalts <offline player>:
    executable by: console
    trigger:
        clear {alts::%{ip::%{uuid::%arg-1%}%}%::*}
command /ban <text> [<text>] [<text>]:
    usage: {@ban_usage}
    permission: ban.use
    permission message: {@permission_message}
    trigger:
        if {banned::%{uuid::%arg-1%}%} is "true":
            set {currentbandur::%{uuid::%arg-1%}%} to difference between {dateend::%{uuid::%arg-1%}%} and now if {duration::%{uuid::%arg-1%}%} is not "PERMANENT"
            set {currentbandur::%{uuid::%arg-1%}%} to "{@permanent_display}" if {duration::%{uuid::%arg-1%}%} is "PERMANENT"
            set {_banscreen} to "{@already_punished}"
            replace all "$type" with "banned" in {_banscreen}
            replace all "$expires" with "%{currentbandur::%{uuid::%arg-1%}%}%" in {_banscreen}
            replace all "$reason" with "%coloured {reason::%{uuid::%arg-1%}%}%" in {_banscreen}
            send "%{_banscreen}%"
            stop
        if {bancd::%uuid of player%} is more than 0:
            set {_cd} to "%{bancd::%uuid of player%}% seconds"
            set {_cd} to {_cd} parsed as timespan
            send "&7Due to your rank, banning is on cooldown for &c%{_cd}%"
            stop
        if {uuid::%arg-1%} is not set:
            send "&7User does not exist"
        else:
            set {_dur} to arg-2
            replace all "d" with " days " in {_dur}
            replace all "h" with " hours " in {_dur}
            replace all "m" with " minutes " in {_dur}
            replace all "s" with " seconds" in {_dur}
            set {dur} to {_dur} parsed as timespan
            if {dur} is set:
                if {dur} is more than {@max_duration}:
                    send "{@max_duration_message}"
                    stop
                set {duration::%{uuid::%arg-1%}%} to {dur}
                if arg-3 is set:
                    set {reason::%{uuid::%arg-1%}%} to arg-3
                else:
                    set {reason::%{uuid::%arg-1%}%} to "No reason specified"
            else:
                {@ban_require_duration} is true:
                    player does not have permission "parosbans.exempt.durationreq.ban"
                    send "{@duration_required}"
                    stop
                set {duration::%{uuid::%arg-1%}%} to "PERMANENT"
                if arg-2 is set:
                    set {reason::%{uuid::%arg-1%}%} to "%arg-2% %arg-3%" if arg-3 is set
                    set {reason::%{uuid::%arg-1%}%} to "%arg-2%" if arg-3 is not set
                else:
                    set {reason::%{uuid::%arg-1%}%} to "No reason specified"
            if {reason::%{uuid::%arg-1%}%} contains " -s":
                if player has permission "ban.silent":
                    set {_silent} to "true"
                    replace all " -s" with "" in {reason::%{uuid::%arg-1%}%}
                if executor is console:
                    set {_silent} to "true"
                    replace all " -s" with "" in {reason::%{uuid::%arg-1%}%}
            if {reason::%{uuid::%arg-1%}%} contains "-s":
                if player has permission "ban.silent":
                    set {_silent} to "true"
                    replace all "-s" with "" in {reason::%{uuid::%arg-1%}%}
                if executor is console:
                    set {_silent} to "true"
                    replace all "-s" with "" in {reason::%{uuid::%arg-1%}%}
            if executor is console:
                set {player} to "{@console_displayname}"
            else:
                set {player} to "%player%"
            if {duration::%{uuid::%arg-1%}%} is not "PERMANENT":
                set {_bc} to "{@ban_broadcast}"
                replace all "$moderatorPrefix" with "%{prefix::%{uuid::%player%}%}%" in {_banscreen} if {uuid::%player%} is set
                replace all "$moderatorPrefix" with "" in {_banscreen} if {uuid::%player%} is not set
                replace all "$moderator" with "%{player}%" in {_bc}
                replace all "$duration" with "%{duration::%{uuid::%arg-1%}%}%" in {_bc}
                replace all "$playerPrefix" with "{@code.prefix.format}" in {_banscreen}
                replace all "$player" with "%{ign::%{uuid::%arg-1%}%}%" in {_bc}
                replace all "$reason" with "%coloured {reason::%{uuid::%arg-1%}%}%" in {_bc}
            else:
                set {_bc} to "{@permanent_ban_broadcast}"
                replace all "$moderatorPrefix" with "%{prefix::%{uuid::%player%}%}%" in {_banscreen} if {uuid::%player%} is set
                replace all "$moderatorPrefix" with "" in {_banscreen} if {uuid::%player%} is not set
                replace all "$moderator" with "%{player}%" in {_bc}
                replace all "$duration" with "{@permanent_display}" in {_bc}
                replace all "$playerPrefix" with "{@code.prefix.format}" in {_banscreen}
                replace all "$player" with "%{ign::%{uuid::%arg-1%}%}%" in {_bc}
                replace all "$reason" with "%coloured {reason::%{uuid::%arg-1%}%}%" in {_bc}
            if {_silent} is "true":
                loop all players:
                    if loop-player has permission "ban.silent":
                        send formatted "<tooltip:{@silent_tooltip}>{@silent_prefix}%{_bc}%" to loop-player
            else:
                broadcast "%{_bc}%"
            set {status::%{uuid::%arg-1%}%} to "Banned"
            set {datebanned::%{uuid::%arg-1%}%} to now formatted as "{@time_format}"
            set {datebanned2::%{uuid::%arg-1%}%} to now
            set {banned::%{uuid::%arg-1%}%} to "true"
            set {moderator::%{uuid::%arg-1%}%} to "%player%"
            set {currentbandur::%{uuid::%arg-1%}%} to {duration::%{uuid::%arg-1%}%}
            if {duration::%{uuid::%arg-1%}%} is not "PERMANENT":
                set {dateend::%{uuid::%arg-1%}%} to {duration::%{uuid::%arg-1%}%} from now
            set {_p} to arg-1 parsed as player
            if executor is console:
                set {moderator::%{uuid::%arg-1%}%} to "{@console_displayname}"
            kick {_p} due to "&7Lost connection to the server, rejoin"
            log "[PUNISHED] %player% banned %arg-1% for %{duration::%{uuid::%arg-1%}%}%. Reason: %{reason::%{uuid::%arg-1%}%}%" to "%{uuid::%arg-1%}%/punishments-recieved.log"
            log "[PUNISHED] %player% banned %arg-1% for %{duration::%{uuid::%arg-1%}%}%. Reason: %{reason::%{uuid::%arg-1%}%}%" to "%uuid of player%/punishments-given.log"
            add 1 to {bans::%{uuid::%arg-1%}%}
            add "{@code.prefix.format}%player% &7was {@ban_type} &7by &c%{player}% &7for %{duration::%{uuid::%arg-1%}%}% for '&c%{reason::%{uuid::%arg-1%}%}%&7'" to {punslogs::%{uuid::%arg-1%}%::*}
            send "{@ban_success}"

command /tempban <text> <text> [<text>]:
    usage: {@tempban_usage}
    permission: ban.use
    permission message: {@permission_message}
    trigger:
        if {banned::%{uuid::%arg-1%}%} is "true":
            set {currentbandur::%{uuid::%arg-1%}%} to difference between {dateend::%{uuid::%arg-1%}%} and now if {duration::%{uuid::%arg-1%}%} is not "PERMANENT"
            set {currentbandur::%{uuid::%arg-1%}%} to "{@permanent_display}" if {duration::%{uuid::%arg-1%}%} is "PERMANENT"
            set {_banscreen} to "{@already_punished}"
            replace all "$type" with "banned" in {_banscreen}
            replace all "$expires" with "%{currentbandur::%{uuid::%arg-1%}%}%" in {_banscreen}
            replace all "$reason" with "%coloured {reason::%{uuid::%arg-1%}%}%" in {_banscreen}
            send "%{_banscreen}%"
            stop
        if {bancd::%uuid of player%} is more than 0:
            set {_cd} to "%{bancd::%uuid of player%}% seconds"
            set {_cd} to {_cd} parsed as timespan
            send "&7Due to your rank, banning is on cooldown for &c%{_cd}%"
            stop
        if {uuid::%arg-1%} is not set:
            send "&7User does not exist"
        else:
            set {_dur} to arg-2
            replace all "d" with " days " in {_dur}
            replace all "h" with " hours " in {_dur}
            replace all "m" with " minutes " in {_dur}
            replace all "s" with " seconds" in {_dur}
            set {dur} to {_dur} parsed as timespan
            if {dur} is set:
                if {dur} is more than {@max_duration}:
                    send "{@max_duration_message}"
                    stop
                set {duration::%{uuid::%arg-1%}%} to {dur}
                if arg-3 is set:
                    set {reason::%{uuid::%arg-1%}%} to arg-3
                else:
                    set {reason::%{uuid::%arg-1%}%} to "No reason specified"
            else:
                send "{@duration_required}"
                stop
            if {reason::%{uuid::%arg-1%}%} contains " -s":
                if player has permission "ban.silent":
                    set {_silent} to "true"
                    replace all " -s" with "" in {reason::%{uuid::%arg-1%}%}
                if executor is console:
                    set {_silent} to "true"
                    replace all " -s" with "" in {reason::%{uuid::%arg-1%}%}
            if {reason::%{uuid::%arg-1%}%} contains "-s":
                if player has permission "ban.silent":
                    set {_silent} to "true"
                    replace all "-s" with "" in {reason::%{uuid::%arg-1%}%}
                if executor is console:
                    set {_silent} to "true"
                    replace all "-s" with "" in {reason::%{uuid::%arg-1%}%}
            if executor is console:
                set {player} to "{@console_displayname}"
            else:
                set {player} to "%player%"
            set {_bc} to "{@ban_broadcast}"
            replace all "$moderatorPrefix" with "%{prefix::%{uuid::%player%}%}%" in {_banscreen} if {uuid::%player%} is set
            replace all "$moderatorPrefix" with "" in {_banscreen} if {uuid::%player%} is not set
            replace all "$moderator" with "%{player}%" in {_bc}
            replace all "$duration" with "%{duration::%{uuid::%arg-1%}%}%" in {_bc}
            replace all "$playerPrefix" with "{@code.prefix.format}" in {_banscreen}
            replace all "$player" with "%{ign::%{uuid::%arg-1%}%}%" in {_bc}
            replace all "$reason" with "%coloured {reason::%{uuid::%arg-1%}%}%" in {_bc}
            if {_silent} is "true":
                loop all players:
                    if loop-player has permission "ban.silent":
                        send formatted "<tooltip:{@silent_tooltip}>{@silent_prefix}%{_bc}%" to loop-player
            else:
                broadcast "%{_bc}%"
            set {status::%{uuid::%arg-1%}%} to "Banned"
            set {datebanned::%{uuid::%arg-1%}%} to now formatted as "{@time_format}"
            set {datebanned2::%{uuid::%arg-1%}%} to now
            set {banned::%{uuid::%arg-1%}%} to "true"
            set {moderator::%{uuid::%arg-1%}%} to "%player%"
            set {currentbandur::%{uuid::%arg-1%}%} to {duration::%{uuid::%arg-1%}%}
            set {dateend::%{uuid::%arg-1%}%} to {duration::%{uuid::%arg-1%}%} from now
            set {_p} to arg-1 parsed as player
            if executor is console:
                set {moderator::%{uuid::%arg-1%}%} to "{@console_displayname}"
            kick {_p} due to "&7Lost connection to the server, rejoin"
            log "[PUNISHED] %player% banned %arg-1% for %{duration::%{uuid::%arg-1%}%}%. Reason: %{reason::%{uuid::%arg-1%}%}%" to "%{uuid::%arg-1%}%/punishments-recieved.log"
            log "[PUNISHED] %player% banned %arg-1% for %{duration::%{uuid::%arg-1%}%}%. Reason: %{reason::%{uuid::%arg-1%}%}%" to "%uuid of player%/punishments-given.log"
            add 1 to {bans::%{uuid::%arg-1%}%}
            add "{@code.prefix.format}%player% &7was {@ban_type} &7by &c%{player}% &7for %{duration::%{uuid::%arg-1%}%}% for '&c%{reason::%{uuid::%arg-1%}%}%&7'" to {punslogs::%{uuid::%arg-1%}%::*}
            send "{@ban_success}"
function getData():
    DataUrlGet()
on join:
    set {ipign::%ip of player%} to "%player%"

command /ipban <text> [<text>] [<text>]:
    usage: {@ipban_usage}
    permission: ipban.use
    permission message: {@permission_message}
    trigger:
        if arg-1 contains ".":
            set {arg-1} to {ipign::%arg-1%}
        else:
            set {arg-1} to arg-1
        if {ipbanned::%{ip::%{uuid::%{arg-1}%}%}%} is "true":
            set {currentipdur::%{ip::%{uuid::%{arg-1}%}%}%} to difference between {ipdateend::%{uuid::%{arg-1}%}%} and now if {ipduration::%{uuid::%{arg-1}%}%} is not "PERMANENT"
            set {currentipdur::%{ip::%{uuid::%{arg-1}%}%}%} to "{@permanent_display}" if {ipduration::%{uuid::%{arg-1}%}%} is "PERMANENT"
            set {_banscreen} to "{@already_punished}"
            replace all "$type" with "IP-banned" in {_banscreen}
            replace all "$expires" with "%{currentipdur::%{ip::%{uuid::%{arg-1}%}%}%}%" in {_banscreen}
            replace all "$reason" with "%coloured {ipreason::%{ip::%{uuid::%{arg-1}%}%}%}%" in {_banscreen}
            send "%{_banscreen}%"
            stop
        if {bancd::%uuid of player%} is more than 0:
            set {_cd} to "%{bancd::%uuid of player%}% seconds"
            set {_cd} to {_cd} parsed as timespan
            send "&7Due to your rank, banning is on cooldown for &c%{_cd}%"
            stop
        if {uuid::%{arg-1}%} is not set:
            send "&7User does not exist"
        else:
            set {_dur} to arg-2
            replace all "d" with " days " in {_dur}
            replace all "h" with " hours " in {_dur}
            replace all "m" with " minutes " in {_dur}
            replace all "s" with " seconds" in {_dur}
            set {dur} to {_dur} parsed as timespan
            if {dur} is set:
                if {dur} is more than {@max_duration}:
                    send "{@max_duration_message}"
                    stop
                set {ipduration::%{ip::%{uuid::%{arg-1}%}%}%} to {dur}
                if arg-3 is set:
                    set {ipreason::%{ip::%{uuid::%{arg-1}%}%}%} to arg-3
                else:
                    set {ipreason::%{ip::%{uuid::%{arg-1}%}%}%} to "No reason specified"
            else:
                {@ipban_require_duration} is true:
                    player does not have permission "parosbans.exempt.durationreq.ipban"
                    send "{@duration_required}"
                    stop
                set {ipduration::%{ip::%{uuid::%{arg-1}%}%}%} to "PERMANENT"
                if arg-2 is set:
                    set {ipreason::%{ip::%{uuid::%{arg-1}%}%}%} to "%arg-2% %arg-3%" if arg-3 is set
                    set {ipreason::%{ip::%{uuid::%{arg-1}%}%}%} to "%arg-2%" if arg-3 is not set
                else:
                    set {ipreason::%{ip::%{uuid::%{arg-1}%}%}%} to "No reason specified"
            if {ipreason::%{ip::%{uuid::%{arg-1}%}%}%} contains " -s":
                if player has permission "ban.silent":
                    set {_silent} to "true"
                    replace all " -s" with "" in {ipreason::%{ip::%{uuid::%{arg-1}%}%}%}
                if executor is console:
                    set {_silent} to "true"
                    replace all " -s" with "" in {ipreason::%{ip::%{uuid::%{arg-1}%}%}%}
            if {ipreason::%{ip::%{uuid::%{arg-1}%}%}%} contains "-s":
                if player has permission "ban.silent":
                    set {_silent} to "true"
                    replace all "-s" with "" in {ipreason::%{ip::%{uuid::%{arg-1}%}%}%}
                if executor is console:
                    set {_silent} to "true"
                    replace all "-s" with "" in {ipreason::%{ip::%{uuid::%{arg-1}%}%}%}
            delete {accs}
            loop {alts::%{ip::%{uuid::%{arg-1}%}%}%::*}:
                set {_} to {ign::%loop-value%} parsed as player
                kick {_} due to "&7Lost connection to the server, rejoin"
                set {status::%loop-value%} to "IP-Banned"
                add "%{prefix::%loop-value%}%%{ign::%loop-value%}% &7was {@ipban_type} &7by &c%{player}% &7for %{ipduration::%{ip::%{uuid::%{arg-1}%}%}%}% for '&c%{ipreason::%{ip::%{uuid::%{arg-1}%}%}%}%&7'" to {punslogs::%loop-value%::*}
                set {_1} to "{@alts_format_1}"
                replace all "$prefix" with "%{prefix::%loop-value%}%" in {_1}
                replace all "$player" with "%{ign::%loop-value%}%" in {_1}
                set {_2} to "{@alts_format}"
                replace all "$prefix" with "%{prefix::%loop-value%}%" in {_2}
                replace all "$player" with "%{ign::%loop-value%}%" in {_2}
                if {accs} is not set:
                    set {accs} to "%{_1}%"
                else:
                    replace "$x" with "%{_accs}%" in {_2}
                    set {accs} to "%{_2}%"
            if {accs} is not set:
                set {accs} to "%{_1}%"
            set {currentipdur::%{ip::%{uuid::%{arg-1}%}%}%} to {ipduration::%{ip::%{uuid::%{arg-1}%}%}%}
            log "[PUNISHED] %player% IP-banned %{accs}% for %{ipduration::%{ip::%{uuid::%{arg-1}%}%}%}%. Reason: %{ipreason::%{ip::%{uuid::%{arg-1}%}%}%}%" to "%{uuid::%{arg-1}%}%/punishments-recieved.log"
            log "[PUNISHED] %player% IP-banned %{accs}% for %{ipduration::%{ip::%{uuid::%{arg-1}%}%}%}%. Reason: %{ipreason::%{ip::%{uuid::%{arg-1}%}%}%}%" to "%uuid of player%/punishments-given.log"
            if executor is console:
                set {player} to "{@console_displayname}"
            else:
                set {player} to "%player%"
            if {ipduration::%{ip::%{uuid::%{arg-1}%}%}%} is not "PERMANENT":
                set {_bc} to "{@ipban_broadcast}"
                replace all "$moderatorPrefix" with "%{prefix::%{uuid::%player%}%}%" in {_banscreen} if {uuid::%player%} is set
                replace all "$moderatorPrefix" with "" in {_banscreen} if {uuid::%player%} is not set
                replace all "$moderator" with "%{player}%" in {_bc}
                replace all "$playerPrefix" with "{@code.prefix.format}" in {_banscreen}
                replace all "$duration" with "%{ipduration::%{ip::%{uuid::%{arg-1}%}%}%}%" in {_bc}
                replace all "$player" with "%{arg-1} parsed as offline player%" in {_bc}
                replace all "$alts" with "%{accs}%" in {_bc}
                replace all "$reason" with "%coloured {ipreason::%{ip::%{uuid::%{arg-1}%}%}%}%" in {_bc}
            else:
                set {_bc} to "{@permanent_ipban_broadcast}"
                replace all "$moderator" with "%{player}%" in {_bc}
                replace all "$moderatorPrefix" with "%{prefix::%{uuid::%player%}%}%" in {_banscreen} if {uuid::%player%} is set
                replace all "$moderatorPrefix" with "" in {_banscreen} if {uuid::%player%} is not set
                replace all "$playerPrefix" with "{@code.prefix.format}" in {_banscreen}
                replace all "$duration" with "%{ipduration::%{ip::%{uuid::%{arg-1}%}%}%}%" in {_bc}
                replace all "$player" with "%{arg-1} parsed as offline player%" in {_bc}
                replace all "$alts" with "%{accs}%" in {_bc}
                replace all "$reason" with "%coloured {ipreason::%{ip::%{uuid::%{arg-1}%}%}%}%" in {_bc}
            if {_silent} is "true":
                loop all players:
                    if loop-player has permission "ban.silent":
                        send formatted "{@silent_prefix}<tooltip:{@silent_tooltip}>%{_bc}%" to loop-player
            else:
                broadcast "%{_bc}%"
            set {ipdatebanned::%{ip::%{uuid::%{arg-1}%}%}%} to now formatted as "{@time_format}"
            set {ipdatebanned2::%{ip::%{uuid::%{arg-1}%}%}%} to now
            set {ipbanned::%{ip::%{uuid::%{arg-1}%}%}%} to "true"
            set {ipmoderator::%{ip::%{uuid::%{arg-1}%}%}%} to "%player%"
            if {ipduration::%{ip::%{uuid::%{arg-1}%}%}%} is not "PERMANENT":
                set {ipdateend::%{uuid::%{arg-1}%}%} to {ipduration::%{ip::%{uuid::%{arg-1}%}%}%} from now
            set {_p} to {arg-1} parsed as player
            if executor is console:
                set {ipmoderator::%{ip::%{uuid::%{arg-1}%}%}%} to "{@console_displayname}"
            kick {_p} due to "&cYour account has been suspended!%nl%%nl%&7Date banned:&7 %{ipdatebanned::%{ip::%{uuid::%{arg-1}%}%}%}%%nl%&7Banned by:&7 %{ipmoderator::%{ip::%{uuid::%{arg-1}%}%}%}%%nl%&cReason:&7 %{ipreason::%{ip::%{uuid::%{arg-1}%}%}%}%%nl%%nl%Expires in:&7 %{ipduration::%{ip::%{uuid::%{arg-1}%}%}%}%%nl%&cAppeal at:&n {@discord}"
            log "[PUNISHED] %player% banned %{arg-1}% for %{ipduration::%{ip::%{uuid::%{arg-1}%}%}%}%. Reason: %{ipreason::%{ip::%{uuid::%{arg-1}%}%}%}%" to "%{uuid::%{arg-1}%}%/punishments-recieved.log"
            log "[PUNISHED] %player% banned %{arg-1}% for %{ipduration::%{ip::%{uuid::%{arg-1}%}%}%}%. Reason: %{ipreason::%{ip::%{uuid::%{arg-1}%}%}%}%" to "%uuid of player%/punishments-given.log"
            add 1 to {ipbans::%{ip::%{uuid::%{arg-1}%}%}%}
            send "{@ipban_success}"

command /tempipban <text> [<text>] [<text>]:
    usage: {@tempipban_usage}
    permission: tempipban.use
    permission message: {@permission_message}
    trigger:
        if arg-1 contains ".":
            set {arg-1} to {ipign::%arg-1%}
        else:
            set {arg-1} to arg-1
        if {ipbanned::%{ip::%{uuid::%{arg-1}%}%}%} is "true":
            set {currentipdur::%{ip::%{uuid::%player%}%}%} to difference between {ipdateend::%{uuid::%player%}%} and now if {ipduration::%{uuid::%{arg-1}%}%} is not "PERMANENT"
            set {currentipdur::%{ip::%{uuid::%player%}%}%} to "{@permanent_display}" if {ipduration::%{uuid::%{arg-1}%}%} is "PERMANENT"
            set {_banscreen} to "{@already_punished}"
            replace all "$type" with "IP-banned" in {_banscreen}
            replace all "$expires" with "%{currentipdur::%{ip::%{uuid::%{arg-1}%}%}%}%" in {_banscreen}
            replace all "$reason" with "%coloured {ipreason::%{ip::%{uuid::%{arg-1}%}%}%}%" in {_banscreen}
            send "%{_banscreen}%"
            stop
        if {bancd::%uuid of player%} is more than 0:
            set {_cd} to "%{bancd::%uuid of player%}% seconds"
            set {_cd} to {_cd} parsed as timespan
            send "&7Due to your rank, banning is on cooldown for &c%{_cd}%"
            stop
        if {uuid::%{arg-1}%} is not set:
            send "&7User does not exist"
        else:
            set {_dur} to arg-2
            replace all "d" with " days " in {_dur}
            replace all "h" with " hours " in {_dur}
            replace all "m" with " minutes " in {_dur}
            replace all "s" with " seconds" in {_dur}
            set {dur} to {_dur} parsed as timespan
            if {dur} is set:
                if {dur} is more than {@max_duration}:
                    send "{@max_duration_message}"
                    stop
                set {ipduration::%{ip::%{uuid::%{arg-1}%}%}%} to {dur}
                if arg-3 is set:
                    set {ipreason::%{ip::%{uuid::%{arg-1}%}%}%} to arg-3
                else:
                    set {ipreason::%{ip::%{uuid::%{arg-1}%}%}%} to "No reason specified"
            else:
                send "{@duration_required}"
                stop 
            if {ipreason::%{ip::%{uuid::%{arg-1}%}%}%} contains " -s":
                if player has permission "ban.silent":
                    set {_silent} to "true"
                    replace all " -s" with "" in {ipreason::%{ip::%{uuid::%{arg-1}%}%}%}
                if executor is console:
                    set {_silent} to "true"
                    replace all " -s" with "" in {ipreason::%{ip::%{uuid::%{arg-1}%}%}%}
            if {ipreason::%{ip::%{uuid::%{arg-1}%}%}%} contains "-s":
                if player has permission "ban.silent":
                    set {_silent} to "true"
                    replace all "-s" with "" in {ipreason::%{ip::%{uuid::%{arg-1}%}%}%}
                if executor is console:
                    set {_silent} to "true"
                    replace all "-s" with "" in {ipreason::%{ip::%{uuid::%{arg-1}%}%}%}
            delete {accs}
            loop {alts::%{ip::%{uuid::%{arg-1}%}%}%::*}:
                kick {ign::%loop-value%} due to "&7Lost connection to the server, rejoin"
                set {status::%loop-value%} to "IP-Banned"
                add "%{prefix::%loop-value%}%%{ign::%loop-value%}% &7was {@ipban_type} &7by &c%{player}% &7for %{ipduration::%{ip::%{uuid::%{arg-1}%}%}%}% for '&c%{ipreason::%{ip::%{uuid::%{arg-1}%}%}%}%&7'" to {punslogs::%loop-value%::*}
                set {_1} to "{@alts_format_1}"
                replace all "$prefix" with "%{prefix::%loop-value%}%" in {_1}
                replace all "$player" with "%{ign::%loop-value%}%" in {_1}
                set {_2} to "{@alts_format}"
                replace all "$prefix" with "%{prefix::%loop-value%}%" in {_2}
                replace all "$player" with "%{ign::%loop-value%}%" in {_2}
                if {accs} is not set:
                    set {accs} to "%{_1}%"
                else:
                    replace "$x" with "%{_accs}%" in {_2}
                    set {accs} to "%{_2}%"
            if {accs} is not set:
                set {accs} to "%{_1}%"
            set {currentipdur::%{ip::%{uuid::%{arg-1}%}%}%} to {ipduration::%{ip::%{uuid::%{arg-1}%}%}%}
            log "[PUNISHED] %player% IP-banned %{accs}% for %{ipduration::%{ip::%{uuid::%{arg-1}%}%}%}%. Reason: %{ipreason::%{ip::%{uuid::%{arg-1}%}%}%}%" to "%{uuid::%{arg-1}%}%/punishments-recieved.log"
            log "[PUNISHED] %player% IP-banned %{accs}% for %{ipduration::%{ip::%{uuid::%{arg-1}%}%}%}%. Reason: %{ipreason::%{ip::%{uuid::%{arg-1}%}%}%}%" to "%uuid of player%/punishments-given.log"
            if executor is console:
                set {player} to "{@console_displayname}"
            else:
                set {player} to "%player%"
            if {ipduration::%{ip::%{uuid::%{arg-1}%}%}%} is not "PERMANENT":
                set {_bc} to "{@ipban_broadcast}"
                replace all "$moderatorPrefix" with "%{prefix::%{uuid::%player%}%}%" in {_banscreen} if {uuid::%player%} is set
                replace all "$moderatorPrefix" with "" in {_banscreen} if {uuid::%player%} is not set
                replace all "$moderator" with "%{player}%" in {_bc}
                replace all "$duration" with "%{ipduration::%{ip::%{uuid::%{arg-1}%}%}%}%" in {_bc}
                replace all "$playerPrefix" with "%{prefix::%{uuid::%{arg-1}%}%}%" in {_bc}
                replace all "$player" with "%{arg-1} parsed as offline player%" in {_bc}
                replace all "$alts" with "%{accs}%" in {_bc}
                replace all "$reason" with "%coloured {ipreason::%{ip::%{uuid::%{arg-1}%}%}%}%" in {_bc}
            else:
                set {_bc} to "{@permanent_ipban_broadcast}"
                replace all "$moderatorPrefix" with "%{prefix::%{uuid::%player%}%}%" in {_banscreen} if {uuid::%player%} is set
                replace all "$moderatorPrefix" with "" in {_banscreen} if {uuid::%player%} is not set
                replace all "$moderator" with "%{player}%" in {_bc}
                replace all "$duration" with "%{ipduration::%{ip::%{uuid::%{arg-1}%}%}%}%" in {_bc}
                replace all "$playerPrefix" with "{@code.prefix.format}" in {_banscreen}
                replace all "$player" with "%{arg-1} parsed as offline player%" in {_bc}
                replace all "$alts" with "%{accs}%" in {_bc}
                replace all "$reason" with "%coloured {ipreason::%{ip::%{uuid::%{arg-1}%}%}%}%" in {_bc}
            if {_silent} is "true":
                loop all players:
                    if loop-player has permission "ban.silent":
                        send formatted "{@silent_prefix}<tooltip:{@silent_tooltip}>%{_bc}%" to loop-player
            else:
                broadcast "%{_bc}%"
            set {ipdatebanned::%{ip::%{uuid::%{arg-1}%}%}%} to now formatted as "{@time_format}"
            set {ipdatebanned2::%{ip::%{uuid::%{arg-1}%}%}%} to now
            set {ipbanned::%{ip::%{uuid::%{arg-1}%}%}%} to "true"
            set {ipmoderator::%{ip::%{uuid::%{arg-1}%}%}%} to "%player%"
            if {ipduration::%{ip::%{uuid::%{arg-1}%}%}%} is not "PERMANENT":
                set {ipdateend::%{uuid::%{arg-1}%}%} to {ipduration::%{ip::%{uuid::%{arg-1}%}%}%} from now
            set {_p} to {arg-1} parsed as player
            if executor is console:
                set {ipmoderator::%{ip::%{uuid::%{arg-1}%}%}%} to "{@console_displayname}"
            kick {_p} due to "&cYour account has been suspended!%nl%%nl%&7Date banned:&7 %{ipdatebanned::%{ip::%{uuid::%{arg-1}%}%}%}%%nl%&7Banned by:&7 %{ipmoderator::%{ip::%{uuid::%{arg-1}%}%}%}%%nl%&cReason:&7 %{ipreason::%{ip::%{uuid::%{arg-1}%}%}%}%%nl%%nl%Expires in:&7 %{ipduration::%{ip::%{uuid::%{arg-1}%}%}%}%%nl%&cAppeal at:&n {@discord}"
            log "[PUNISHED] %player% banned %{arg-1}% for %{ipduration::%{ip::%{uuid::%{arg-1}%}%}%}%. Reason: %{ipreason::%{ip::%{uuid::%{arg-1}%}%}%}%" to "%{uuid::%{arg-1}%}%/punishments-recieved.log"
            log "[PUNISHED] %player% banned %{arg-1}% for %{ipduration::%{ip::%{uuid::%{arg-1}%}%}%}%. Reason: %{ipreason::%{ip::%{uuid::%{arg-1}%}%}%}%" to "%uuid of player%/punishments-given.log"
            add 1 to {ipbans::%{ip::%{uuid::%{arg-1}%}%}%}
            send "{@ipban_success}"
function DataUrlGet():
    serverBanHandler()

on join:
    set {lastjoindate::%uuid of player%} to now
command /who [<text>]:
    permission: who.use
    permission message: {@permission_message}
    trigger:
        send "{@who_header}"
        send "&c"
        send "&8 • &fName:&7 %{prefix::%{uuid::%arg-1%}%}%%{ign::%{uuid::%arg-1%}%}%"
        send "&8 • &fUUID:&7 %{uuid::%arg-1%}%"
        set {_diff} to difference between {lastjoindate::%{uuid::%arg-1%}%} and now
        set {_s} to {_diff} in seconds
        set {_dur} to {_s} seconds formatted into "d'{@ts_days}' H'{@ts_hours}' m'{@ts_minutes}' s'{@ts_seconds}'"
        set {_t::*} to {_dur} split by " "
        replace all "0d " with "" in {_dur} if {_t::1} is "0d"
        replace all "0h " with "" in {_dur} if {_t::2} is "0h"
        replace all "0m " with "" in {_dur} if {_t::3} is "0m"
        replace all " 0s" with "" in {_dur} if {_t::4} is "0s"
        if {_dur} is not set:
            set {_dur} to "Unknown"
        if {_dur} is "0s":
            set {_dur} to "Unknown"
        send "&8 • &fLast seen:&6 %{_dur}% back"
        if {banned::%{uuid::%arg-1%}%} is "true":
            send "&f "
            send "&8 • &fBAN&7:"
            send "&8 &8 &8 • &fType:&7 -"
            if player has permission "who.extra":
                send "&8 &8 &8 • &fIssued by:&7 %{prefix::%{uuid::%{moderator::%{uuid::%arg-1%}%}%}%}%%{moderator::%{uuid::%arg-1%}%}%"
                send "&8 &8 &8 • &fReason:&7 %{reason::%{uuid::%arg-1%}%}%"
            if {duration::%{uuid::%arg-1%}%} is not "PERMANENT":
                if now is more than {dateend::%{uuid::%arg-1%}%}:
                    set {banned::%{uuid::%arg-1%}%} to "false"
            else:
                set {currentbandur::%{uuid::%arg-1%}%} to "{@permanent_display}"
            set {_dateback} to difference between {datebanned2::%{uuid::%arg-1%}%} and now
            set {_d} to {_dateback} in seconds
            set {_displaytime} to {_d}
            if {@legacy_timespans} is true:
                set {_displaytime} to {_displaytime} seconds formatted as "d'{@ts_days}' H'{@ts_hours}' m'{@ts_minutes}' s'{@ts_seconds}'"
                set {_dt::*} to {_displaytime} split by " "
                replace all "0{@ts_days} " with "" in {_displaytime} if {_dt::1} is "0{@ts_days}"
                replace all "0{@ts_hours} " with "" in {_displaytime} if {_dt::2} is "0{@ts_hours}"
                replace all "0{@ts_minutes} " with "" in {_displaytime} if {_dt::3} is "0{@ts_minutes}"
                replace all " 0{@ts_seconds}" with "" in {_displaytime} if {_dt::4} is "0{@ts_seconds}"
            else:
                if {currentbandur::%{uuid::%arg-1%}%} is less than 1 minute:
                    set {_displaytime} to {_displaytime} seconds formatted as "s'{@ts_seconds}'"
                else:
                    set {_displaytime} to {_displaytime} seconds formatted as "d'{@ts_days}' H'{@ts_hours}' m'{@ts_minutes}'"
                    set {_dt::*} to {_displaytime} split by " "
                    replace all "0{@ts_days} " with "" in {_displaytime} if {_dt::1} is "0{@ts_days}"
                    replace all "0{@ts_hours} " with "" in {_displaytime} if {_dt::2} is "0{@ts_hours}"
                    replace all " 0{@ts_minutes}" with "" in {_displaytime} if {_dt::3} is "0{@ts_minutes}"
            replace all "-" with " " in {_displaytime}
            send "&8 &8 &8 • &fPunished in:&6 %{_displaytime}% back"
            set {_displaytime} to {currentbandur::%{uuid::%arg-1%}%} in seconds
            if {@legacy_timespans} is true:
                set {_displaytime} to {_displaytime} seconds formatted as "d'{@ts_days}' H'{@ts_hours}' m'{@ts_minutes}' s'{@ts_seconds}'"
                set {_dt::*} to {_displaytime} split by " "
                replace all "0{@ts_days} " with "" in {_displaytime} if {_dt::1} is "0{@ts_days}"
                replace all "0{@ts_hours} " with "" in {_displaytime} if {_dt::2} is "0{@ts_hours}"
                replace all "0{@ts_minutes} " with "" in {_displaytime} if {_dt::3} is "0{@ts_minutes}"
                replace all " 0{@ts_seconds}" with "" in {_displaytime} if {_dt::4} is "0{@ts_seconds}"
            else:
                if {currentbandur::%{uuid::%arg-1%}%} is less than 1 minute:
                    set {_displaytime} to {_displaytime} seconds formatted as "s'{@ts_seconds}'"
                else:
                    set {_displaytime} to {_displaytime} seconds formatted as "d'{@ts_days}' H'{@ts_hours}' m'{@ts_minutes}'"
                    set {_dt::*} to {_displaytime} split by " "
                    replace all "0{@ts_days} " with "" in {_displaytime} if {_dt::1} is "0{@ts_days}"
                    replace all "0{@ts_hours} " with "" in {_displaytime} if {_dt::2} is "0{@ts_hours}"
                    replace all " 0{@ts_minutes}" with "" in {_displaytime} if {_dt::3} is "0{@ts_minutes}"
            replace all "-" with " " in {_displaytime}
            send "&8 &8 &8 • &fPunished for:&7 %{_displaytime}%"
            set {_diff} to difference between {dateend::%{uuid::%arg-1%}%} and {datebanned2::%{uuid::%arg-1%}%}
            set {_displaytime} to {_diff} in seconds
            if {@legacy_timespans} is true:
                set {_displaytime} to {_displaytime} seconds formatted as "d'{@ts_days}' H'{@ts_hours}' m'{@ts_minutes}' s'{@ts_seconds}'"
                set {_dt::*} to {_displaytime} split by " "
                replace all "0{@ts_days} " with "" in {_displaytime} if {_dt::1} is "0{@ts_days}"
                replace all "0{@ts_hours} " with "" in {_displaytime} if {_dt::2} is "0{@ts_hours}"
                replace all "0{@ts_minutes} " with "" in {_displaytime} if {_dt::3} is "0{@ts_minutes}"
                replace all " 0{@ts_seconds}" with "" in {_displaytime} if {_dt::4} is "0{@ts_seconds}"
            else:
                if {_diff} is less than 1 minute:
                    set {_displaytime} to {_displaytime} seconds formatted as "s'{@ts_seconds}'"
                else:
                    set {_displaytime} to {_displaytime} seconds formatted as "d'{@ts_days}' H'{@ts_hours}' m'{@ts_minutes}'"
                    set {_dt::*} to {_displaytime} split by " "
                    replace all "0{@ts_days} " with "" in {_displaytime} if {_dt::1} is "0{@ts_days}"
                    replace all "0{@ts_hours} " with "" in {_displaytime} if {_dt::2} is "0{@ts_hours}"
                    replace all " 0{@ts_minutes}" with "" in {_displaytime} if {_dt::3} is "0{@ts_minutes}"
            replace all "-" with " " in {_displaytime}
            send "&8 &8 &8 • &fOriginal duration:&7 %{_displaytime}%"
        if {ipbanned::%{ip::%{uuid::%arg-1%}%}%} is "true":
            send "&f "
            send "&8 • &fBAN&7:"
            send "&8 &8 &8 • &fType:&7 IP"
            set {currentipdur::%{ip::%{uuid::%arg-1%}%}%} to difference between {ipdateend::%{uuid::%arg-1%}%} and now
            if {ipduration::%{ip::%{uuid::%arg-1%}%}%} is not "PERMANENT":
                if now is more than {ipdateend::%{ip::%{uuid::%arg-1%}%}%}:
                    delete {ipbanned::%{ip::%{uuid::%arg-1%}%}%}
            else:
                set {currentipdur::%{ip::%{uuid::%arg-1%}%}%} to "{@permanent_display}"
            if player has permission "who.extra":
                send "&8 &8 &8 • &fIssued by:&7 %{prefix::%{uuid::%{ipmoderator::%{ip::%{uuid::%arg-1%}%}%}%}%}%%{ipmoderator::%{ip::%{uuid::%arg-1%}%}%}%"
                send "&8 &8 &8 • &fReason:&7 %{ipreason::%{ip::%{uuid::%arg-1%}%}%}%"
            set {_dateback} to difference between {ipdatebanned2::%{ip::%{uuid::%arg-1%}%}%} and now
            set {_displaytime} to {_dateback} in seconds
            if {@legacy_timespans} is true:
                set {_displaytime} to {_displaytime} seconds formatted as "d'{@ts_days}' H'{@ts_hours}' m'{@ts_minutes}' s'{@ts_seconds}'"
                set {_dt::*} to {_displaytime} split by " "
                replace all "0{@ts_days} " with "" in {_displaytime} if {_dt::1} is "0{@ts_days}"
                replace all "0{@ts_hours} " with "" in {_displaytime} if {_dt::2} is "0{@ts_hours}"
                replace all "0{@ts_minutes} " with "" in {_displaytime} if {_dt::3} is "0{@ts_minutes}"
                replace all " 0{@ts_seconds}" with "" in {_displaytime} if {_dt::4} is "0{@ts_seconds}"
            else:
                if {_dateback} is less than 1 minute:
                    set {_displaytime} to {_displaytime} seconds formatted as "s'{@ts_seconds}'"
                else:
                    set {_displaytime} to {_displaytime} seconds formatted as "d'{@ts_days}' H'{@ts_hours}' m'{@ts_minutes}'"
                    set {_dt::*} to {_displaytime} split by " "
                    replace all "0{@ts_days} " with "" in {_displaytime} if {_dt::1} is "0{@ts_days}"
                    replace all "0{@ts_hours} " with "" in {_displaytime} if {_dt::2} is "0{@ts_hours}"
                    replace all " 0{@ts_minutes}" with "" in {_displaytime} if {_dt::3} is "0{@ts_minutes}"
            replace all "-" with " " in {_displaytime}
            send "&8 &8 &8 • &fPunished in:&6 %{_displaytime}% back"
            set {_displaytime} to {currentipdur::%{ip::%{uuid::%arg-1%}%}%} in seconds
            if {@legacy_timespans} is true:
                set {_displaytime} to {_displaytime} seconds formatted as "d'{@ts_days}' H'{@ts_hours}' m'{@ts_minutes}' s'{@ts_seconds}'"
                set {_dt::*} to {_displaytime} split by " "
                replace all "0{@ts_days} " with "" in {_displaytime} if {_dt::1} is "0{@ts_days}"
                replace all "0{@ts_hours} " with "" in {_displaytime} if {_dt::2} is "0{@ts_hours}"
                replace all "0{@ts_minutes} " with "" in {_displaytime} if {_dt::3} is "0{@ts_minutes}"
                replace all " 0{@ts_seconds}" with "" in {_displaytime} if {_dt::4} is "0{@ts_seconds}"
            else:
                if {currentipdur::%{ip::%{uuid::%arg-1%}%}%} is less than 1 minute:
                    set {_displaytime} to {_displaytime} seconds formatted as "s'{@ts_seconds}'"
                else:
                    set {_displaytime} to {_displaytime} seconds formatted as "d'{@ts_days}' H'{@ts_hours}' m'{@ts_minutes}'"
                    set {_dt::*} to {_displaytime} split by " "
                    replace all "0{@ts_days} " with "" in {_displaytime} if {_dt::1} is "0{@ts_days}"
                    replace all "0{@ts_hours} " with "" in {_displaytime} if {_dt::2} is "0{@ts_hours}"
                    replace all " 0{@ts_minutes}" with "" in {_displaytime} if {_dt::3} is "0{@ts_minutes}"
            replace all "-" with " " in {_displaytime}
            send "&8 &8 &8 • &fPunished for:&7 %{_displaytime}%"
            set {_diff} to difference between {ipdateend::%{ip::%{uuid::%arg-1%}%}%} and {ipdatebanned::%{ip::%{uuid::%arg-1%}%}%}
            set {_displaytime} to {_diff} in seconds
            if {@legacy_timespans} is true:
                set {_displaytime} to {_displaytime} seconds formatted as "d'{@ts_days}' H'{@ts_hours}' m'{@ts_minutes}' s'{@ts_seconds}'"
                set {_dt::*} to {_displaytime} split by " "
                replace all "0{@ts_days} " with "" in {_displaytime} if {_dt::1} is "0{@ts_days}"
                replace all "0{@ts_hours} " with "" in {_displaytime} if {_dt::2} is "0{@ts_hours}"
                replace all "0{@ts_minutes} " with "" in {_displaytime} if {_dt::3} is "0{@ts_minutes}"
                replace all " 0{@ts_seconds}" with "" in {_displaytime} if {_dt::4} is "0{@ts_seconds}"
            else:
                if {_diff} is less than 1 minute:
                    set {_displaytime} to {_displaytime} seconds formatted as "s'{@ts_seconds}'"
                else:
                    set {_displaytime} to {_displaytime} seconds formatted as "d'{@ts_days}' H'{@ts_hours}' m'{@ts_minutes}'"
                    set {_dt::*} to {_displaytime} split by " "
                    replace all "0{@ts_days} " with "" in {_displaytime} if {_dt::1} is "0{@ts_days}"
                    replace all "0{@ts_hours} " with "" in {_displaytime} if {_dt::2} is "0{@ts_hours}"
                    replace all " 0{@ts_minutes}" with "" in {_displaytime} if {_dt::3} is "0{@ts_minutes}"
            replace all "-" with " " in {_displaytime}
            send "&8 &8 &8 • &fOriginal duration:&7 %{_displaytime}%"
        if {muted::%{uuid::%arg-1%}%} is "true":
            send "&f "
            send "&8 • &fMUTE&7:"
            send "&8 &8 &8 • &fType:&7 -"
            if player has permission "who.extra":
                send "&8 &8 &8 • &fIssued by:&7 %{prefix::%{uuid::%{mutemoderator::%{uuid::%arg-1%}%}%}%}%%{mutemoderator::%{uuid::%arg-1%}%}%"
                send "&8 &8 &8 • &fReason:&7 %{mutereason::%{uuid::%arg-1%}%}%"
            set {currentmutedur::%{uuid::%arg-1%}%} to difference between {mutedateend::%{uuid::%arg-1%}%} and now
            if {muteduration::%{uuid::%arg-1%}%} is not "PERMANENT":
                if now is more than {mutedateend::%{uuid::%arg-1%}%}:
                    delete {muted::%{uuid::%arg-1%}%}
            else:
                set {currentmutedur::%{uuid::%arg-1%}%} to "{@permanent_display}"
            set {_dateback} to difference between {datemuted2::%{uuid::%arg-1%}%} and now
            set {_displaytime} to {_dateback} in seconds
            if {@legacy_timespans} is true:
                set {_displaytime} to {_displaytime} seconds formatted as "d'{@ts_days}' H'{@ts_hours}' m'{@ts_minutes}' s'{@ts_seconds}'"
                set {_dt::*} to {_displaytime} split by " "
                replace all "0{@ts_days} " with "" in {_displaytime} if {_dt::1} is "0{@ts_days}"
                replace all "0{@ts_hours} " with "" in {_displaytime} if {_dt::2} is "0{@ts_hours}"
                replace all "0{@ts_minutes} " with "" in {_displaytime} if {_dt::3} is "0{@ts_minutes}"
                replace all " 0{@ts_seconds}" with "" in {_displaytime} if {_dt::4} is "0{@ts_seconds}"
            else:
                if {_dateback} is less than 1 minute:
                    set {_displaytime} to {_displaytime} seconds formatted as "s'{@ts_seconds}'"
                else:
                    set {_displaytime} to {_displaytime} seconds formatted as "d'{@ts_days}' H'{@ts_hours}' m'{@ts_minutes}'"
                    set {_dt::*} to {_displaytime} split by " "
                    replace all "0{@ts_days} " with "" in {_displaytime} if {_dt::1} is "0{@ts_days}"
                    replace all "0{@ts_hours} " with "" in {_displaytime} if {_dt::2} is "0{@ts_hours}"
                    replace all " 0{@ts_minutes}" with "" in {_displaytime} if {_dt::3} is "0{@ts_minutes}"
            replace all "-" with " " in {_displaytime}
            send "&8 &8 &8 • &fPunished in:&6 %{_displaytime}% back"
            set {_displaytime} to {currentmutedur::%{uuid::%arg-1%}%} in seconds
            if {@legacy_timespans} is true:
                set {_displaytime} to {_displaytime} seconds formatted as "d'{@ts_days}' H'{@ts_hours}' m'{@ts_minutes}' s'{@ts_seconds}'"
                set {_dt::*} to {_displaytime} split by " "
                replace all "0{@ts_days} " with "" in {_displaytime} if {_dt::1} is "0{@ts_days}"
                replace all "0{@ts_hours} " with "" in {_displaytime} if {_dt::2} is "0{@ts_hours}"
                replace all "0{@ts_minutes} " with "" in {_displaytime} if {_dt::3} is "0{@ts_minutes}"
                replace all " 0{@ts_seconds}" with "" in {_displaytime} if {_dt::4} is "0{@ts_seconds}"
            else:
                if {currentmutedur::%{uuid::%arg-1%}%} is less than 1 minute:
                    set {_displaytime} to {_displaytime} seconds formatted as "s'{@ts_seconds}'"
                else:
                    set {_displaytime} to {_displaytime} seconds formatted as "d'{@ts_days}' H'{@ts_hours}' m'{@ts_minutes}'"
                    set {_dt::*} to {_displaytime} split by " "
                    replace all "0{@ts_days} " with "" in {_displaytime} if {_dt::1} is "0{@ts_days}"
                    replace all "0{@ts_hours} " with "" in {_displaytime} if {_dt::2} is "0{@ts_hours}"
                    replace all " 0{@ts_minutes}" with "" in {_displaytime} if {_dt::3} is "0{@ts_minutes}"
            replace all "-" with " " in {_displaytime}
            send "&8 &8 &8 • &fPunished for:&7 %{_displaytime}%"
            set {_diff} to difference between {mutedateend::%{uuid::%arg-1%}%} and {datemuted2::%{uuid::%arg-1%}%}
            set {_displaytime} to {_diff} in seconds
            if {@legacy_timespans} is true:
                set {_displaytime} to {_displaytime} seconds formatted as "d'{@ts_days}' H'{@ts_hours}' m'{@ts_minutes}' s'{@ts_seconds}'"
                set {_dt::*} to {_displaytime} split by " "
                replace all "0{@ts_days} " with "" in {_displaytime} if {_dt::1} is "0{@ts_days}"
                replace all "0{@ts_hours} " with "" in {_displaytime} if {_dt::2} is "0{@ts_hours}"
                replace all "0{@ts_minutes} " with "" in {_displaytime} if {_dt::3} is "0{@ts_minutes}"
                replace all " 0{@ts_seconds}" with "" in {_displaytime} if {_dt::4} is "0{@ts_seconds}"
            else:
                if {_diff} is less than 1 minute:
                    set {_displaytime} to {_displaytime} seconds formatted as "s'{@ts_seconds}'"
                else:
                    set {_displaytime} to {_displaytime} seconds formatted as "d'{@ts_days}' H'{@ts_hours}' m'{@ts_minutes}'"
                    set {_dt::*} to {_displaytime} split by " "
                    replace all "0{@ts_days} " with "" in {_displaytime} if {_dt::1} is "0{@ts_days}"
                    replace all "0{@ts_hours} " with "" in {_displaytime} if {_dt::2} is "0{@ts_hours}"
                    replace all " 0{@ts_minutes}" with "" in {_displaytime} if {_dt::3} is "0{@ts_minutes}"
            replace all "-" with " " in {_displaytime}
            send "&8 &8 &8 • &fOriginal duration:&7 %{_displaytime}%"
        if {ipmuted::%{ip::%{uuid::%arg-1%}%}%} is "true":
            send "&f "
            send "&8 • &fMUTE&7:"
            send "&8 &8 &8 • &fType:&7 IP"
            if player has permission "who.extra":
                send "&8 &8 &8 • &fIssued by:&7 %{prefix::%{uuid::%{ipmutemoderator::%{ip::%{uuid::%arg-1%}%}%}%}%}%%{ipmutemoderator::%{ip::%{uuid::%arg-1%}%}%}%"
                send "&8 &8 &8 • &fReason:&7 %{ipmutereason::%{ip::%{uuid::%arg-1%}%}%}%"
            set {currentipmutedur::%{ip::%{uuid::%arg-1%}%}%} to difference between {ipmutedateend::%{ip::%{uuid::%arg-1%}%}%} and now
            if {ipmuteduration::%{ip::%{uuid::%arg-1%}%}%} is not "PERMANENT":
                if now is more than {ipmuteduration::%{ip::%{uuid::%arg-1%}%}%} from {ipmutedateend2::%{ip::%{uuid::%arg-1%}%}%}:
                    delete {ipmuted::%{ip::%{uuid::%arg-1%}%}%}
            else:
                set {currentipmutedur::%{ip::%{uuid::%arg-1%}%}%} to "{@permanent_display}"
            set {_dateback} to difference between {ipmutedatebanned2::%{ip::%{uuid::%arg-1%}%}%} and now
            set {_displaytime} to {_dateback} in seconds
            if {@legacy_timespans} is true:
                set {_displaytime} to {_displaytime} seconds formatted as "d'{@ts_days}' H'{@ts_hours}' m'{@ts_minutes}' s'{@ts_seconds}'"
                set {_dt::*} to {_displaytime} split by " "
                replace all "0{@ts_days} " with "" in {_displaytime} if {_dt::1} is "0{@ts_days}"
                replace all "0{@ts_hours} " with "" in {_displaytime} if {_dt::2} is "0{@ts_hours}"
                replace all "0{@ts_minutes} " with "" in {_displaytime} if {_dt::3} is "0{@ts_minutes}"
                replace all " 0{@ts_seconds}" with "" in {_displaytime} if {_dt::4} is "0{@ts_seconds}"
            else:
                if {_dateback} is less than 1 minute:
                    set {_displaytime} to {_displaytime} seconds formatted as "s'{@ts_seconds}'"
                else:
                    set {_displaytime} to {_displaytime} seconds formatted as "d'{@ts_days}' H'{@ts_hours}' m'{@ts_minutes}'"
                    set {_dt::*} to {_displaytime} split by " "
                    replace all "0{@ts_days} " with "" in {_displaytime} if {_dt::1} is "0{@ts_days}"
                    replace all "0{@ts_hours} " with "" in {_displaytime} if {_dt::2} is "0{@ts_hours}"
                    replace all " 0{@ts_minutes}" with "" in {_displaytime} if {_dt::3} is "0{@ts_minutes}"
            replace all "-" with " " in {_displaytime}
            send "&8 &8 &8 • &fPunished in:&6 %{_displaytime}% back"
            set {_displaytime} to {currentipmutedur::%{ip::%{uuid::%arg-1%}%}%} in seconds
            if {@legacy_timespans} is true:
                set {_displaytime} to {_displaytime} seconds formatted as "d'{@ts_days}' H'{@ts_hours}' m'{@ts_minutes}' s'{@ts_seconds}'"
                set {_dt::*} to {_displaytime} split by " "
                replace all "0{@ts_days} " with "" in {_displaytime} if {_dt::1} is "0{@ts_days}"
                replace all "0{@ts_hours} " with "" in {_displaytime} if {_dt::2} is "0{@ts_hours}"
                replace all "0{@ts_minutes} " with "" in {_displaytime} if {_dt::3} is "0{@ts_minutes}"
                replace all " 0{@ts_seconds}" with "" in {_displaytime} if {_dt::4} is "0{@ts_seconds}"
            else:
                if {currentipmutedur::%{ip::%{uuid::%arg-1%}%}%} is less than 1 minute:
                    set {_displaytime} to {_displaytime} seconds formatted as "s'{@ts_seconds}'"
                else:
                    set {_displaytime} to {_displaytime} seconds formatted as "d'{@ts_days}' H'{@ts_hours}' m'{@ts_minutes}'"
                    set {_dt::*} to {_displaytime} split by " "
                    replace all "0{@ts_days} " with "" in {_displaytime} if {_dt::1} is "0{@ts_days}"
                    replace all "0{@ts_hours} " with "" in {_displaytime} if {_dt::2} is "0{@ts_hours}"
                    replace all " 0{@ts_minutes}" with "" in {_displaytime} if {_dt::3} is "0{@ts_minutes}"
            replace all "-" with " " in {_displaytime}
            send "&8 &8 &8 • &fPunished for:&7 %{_displaytime}%"
            set {_diff} to difference between {ipmutedateend::%{ip::%{uuid::%arg-1%}%}%} and {ipmutedatebanned2::%{ip::%{uuid::%arg-1%}%}%}
            set {_displaytime} to {_diff} in seconds
            if {@legacy_timespans} is true:
                set {_displaytime} to {_displaytime} seconds formatted as "d'{@ts_days}' H'{@ts_hours}' m'{@ts_minutes}' s'{@ts_seconds}'"
                set {_dt::*} to {_displaytime} split by " "
                replace all "0{@ts_days} " with "" in {_displaytime} if {_dt::1} is "0{@ts_days}"
                replace all "0{@ts_hours} " with "" in {_displaytime} if {_dt::2} is "0{@ts_hours}"
                replace all "0{@ts_minutes} " with "" in {_displaytime} if {_dt::3} is "0{@ts_minutes}"
                replace all " 0{@ts_seconds}" with "" in {_displaytime} if {_dt::4} is "0{@ts_seconds}"
            else:
                if {_diff} is less than 1 minute:
                    set {_displaytime} to {_displaytime} seconds formatted as "s'{@ts_seconds}'"
                else:
                    set {_displaytime} to {_displaytime} seconds formatted as "d'{@ts_days}' H'{@ts_hours}' m'{@ts_minutes}'"
                    set {_dt::*} to {_displaytime} split by " "
                    replace all "0{@ts_days} " with "" in {_displaytime} if {_dt::1} is "0{@ts_days}"
                    replace all "0{@ts_hours} " with "" in {_displaytime} if {_dt::2} is "0{@ts_hours}"
                    replace all " 0{@ts_minutes}" with "" in {_displaytime} if {_dt::3} is "0{@ts_minutes}"
            replace all "-" with " " in {_displaytime}
            send "&8 &8 &8 • &fOriginal duration:&7 %{_displaytime}%"
function serverBanHandler():
    banServerRead()


on connect:
    if {ipbanned::%ip of player%} is "true":
        set {currentipdur::%{ip::%{uuid::%player%}%}%} to difference between {ipdateend::%{uuid::%player%}%} and now
        if {ipduration::%ip of player%} is not "PERMANENT":
            set {_displaytime} to {currentipdur::%{ip::%{uuid::%player%}%}%}
            set {_displaytime} to {_displaytime} in seconds
            if {@legacy_timespans} is true:
                set {_displaytime} to {_displaytime} seconds formatted as "d'{@ts_days}' H'{@ts_hours}' m'{@ts_minutes}' s'{@ts_seconds}'"
                set {_dt::*} to {_displaytime} split by " "
                replace all "0{@ts_days} " with "" in {_displaytime} if {_dt::1} is "0{@ts_days}"
                replace all "0{@ts_hours} " with "" in {_displaytime} if {_dt::2} is "0{@ts_hours}"
                replace all "0{@ts_minutes} " with "" in {_displaytime} if {_dt::3} is "0{@ts_minutes}"
                replace all " 0{@ts_seconds}" with "" in {_displaytime} if {_dt::4} is "0{@ts_seconds}"
            else:
                if {currentipdur::%{ip::%{uuid::%player%}%}%} is less than 1 minute:
                    set {_displaytime} to {_displaytime} seconds formatted as "s'{@ts_seconds}'"
                else:
                    set {_displaytime} to {_displaytime} seconds formatted as "d'{@ts_days}' H'{@ts_hours}' m'{@ts_minutes}'"
                    set {_dt::*} to {_displaytime} split by " "
                    replace all "0{@ts_days} " with "" in {_displaytime} if {_dt::1} is "0{@ts_days}"
                    replace all "0{@ts_hours} " with "" in {_displaytime} if {_dt::2} is "0{@ts_hours}"
                    replace all " 0{@ts_minutes}" with "" in {_displaytime} if {_dt::3} is "0{@ts_minutes}"
            replace all "-" with " " in {_displaytime}
            if now is more than {ipduration::%ip of player%} after {ipdatebanned2::%{ip::%{uuid::player}%}%}:
                delete {ipbanned::%{ip::%{uuid::%player%}%}%}
                delete {ipbanid::%uuid of player%}
        else:
            set {currentipdur::%{ip::%{uuid::%player%}%}%} to "{@permanent_display}"

        if {ipbanned::%ip of player%} is "true":
            if {ipbanid::%uuid of player%} is not set:
                set {id::*} to "A", "B", "C", "D", "E", "F" and "G"
                set {id1::*} to "A", "E", "Z", "O", "F", "P" and "L"
                set {id2::*} to "A", "D", "Z", "F", "E", "G" and "R"
                set {_gen} to random element out of {id::*}
                set {_gen1} to random element out of {id1::*}
                set {_gen2} to random element out of {id2::*}
                set {_gen3} to random number between 1 and 5
                set {_gen3} to round({_gen3})
                set {_gen4} to random number between 1 and 9999
                set {_gen4} to round({_gen4})
                set {_gen5} to random number between 10 and 999
                set {_gen5} to round({_gen5})
                set {ipbanid::%uuid of player%} to "%{_gen3}%%{_gen}%%{_gen5}%%{_gen1}%%{_gen4}%"
                delete {id::*}
                delete {id1::*}
                delete {id2::*}
            if {ipduration::%ip of player%} is not "PERMANENT":
                set {_banscreen} to "{@banscreen}"
                replace all "$base" with "{@banscreen_base}" in {_banscreen}
                replace all "$appealMessage" with "{@banscreen_appealmessage}" in {_banscreen}
                replace all "$playerPrefix" with "{@code.prefix.format}" in {_banscreen}
                replace all "$player" with "%player%" in {_banscreen}
                replace all "$discord" with "{@discord}" in {_banscreen}
                replace all "$moderatorPrefix" with "%{prefix::%{uuid::%{ipmoderator::%ip of player%}%}%}%" in {_banscreen} if {uuid::%{ipmoderator::%ip of player%}%} is set
                replace all "$moderatorPrefix" with "" in {_banscreen} if {uuid::%{ipmoderator::%ip of player%}%} is set
                replace all "$moderator" with "%{ipmoderator::%ip of player%}%" in {_banscreen}
                replace all "$reason" with "%coloured {ipreason::%ip of player%}%" in {_banscreen}
                replace all "$date" with "%{ipdatebanned::%ip of player%}%" in {_banscreen}
                replace all "$expires" with "%{_displaytime}%" in {_banscreen}
                replace all "$id" with "%{ipbanid::%uuid of player%}%" in {_banscreen}
                replace all "\n" with "%nl%" in {_banscreen}

            else:
                set {_banscreen} to "{@permanent_banscreen}"
                replace all "$base" with "{@banscreen_base}" in {_banscreen}
                replace all "$appealMessage" with "{@banscreen_appealmessage}" in {_banscreen}
                replace all "$playerPrefix" with "{@code.prefix.format}" in {_banscreen}
                replace all "$player" with "%player%" in {_banscreen}
                replace all "$discord" with "{@discord}" in {_banscreen}
                replace all "$moderatorPrefix" with "%{prefix::%{uuid::%{ipmoderator::%ip of player%}%}%}%" in {_banscreen} if {uuid::%{ipmoderator::%ip of player%}%} is set
                replace all "$moderatorPrefix" with "" in {_banscreen} if {uuid::%{ipmoderator::%ip of player%}%} is set
                replace all "$moderator" with "%{ipmoderator::%ip of player%}%" in {_banscreen}
                replace all "$reason" with "%coloured {ipreason::%ip of player%}%" in {_banscreen}
                replace all "$date" with "%{ipdatebanned::%ip of player%}%" in {_banscreen}
                replace all "$expires" with "{@permanent_display}" in {_banscreen}
                replace all "$id" with "%{ipbanid::%uuid of player%}%" in {_banscreen}
                replace all "\n" with "%nl%" in {_banscreen}
            {@code.handler.ipban}
            if {mutedchatdate::%uuid of player%} is set:
                if now is not more than 2 minutes from {mutedchatdate::%uuid of player%}:
                    set {_} to "true"
            if {_} is not "true":
                set {mutedchatdate::%uuid of player%} to now
                set {_banscreen} to "{@ban_join}"
                replace all "$playerPrefix" with "{@code.prefix.format}" in {_banscreen}
                replace all "$player" with "%player%" in {_banscreen}
                replace all "$moderatorPrefix" with "%{prefix::%{uuid::%{mutemoderator::%uuid of player%}%}%}%" in {_banscreen}
                replace all "$moderator" with "%{mutemoderator::%uuid of player%}%" in {_banscreen}
                replace all "$reason" with "%coloured {mutereason::%uuid of player%}%" in {_banscreen}
                replace all "$date" with "%{datemuted::%uuid of player%}%" in {_banscreen}
                replace all "$expires" with "%{currentmutedur::%uuid of player%}%" in {_banscreen}
                replace all "$id" with "%{muteid::%uuid of player%}%" in {_banscreen}
                loop all players:
                    if loop-player has permission "ban.use":
                        send "%{_banscreen}%" to loop-player
            stop

    if {banned::%uuid of player%} is "true":
        set {currentbandur::%uuid of player%} to difference between {dateend::%uuid of player%} and now
        if {duration::%uuid of player%} is not "PERMANENT":
            if now is more than {dateend::%uuid of player%}:
                set {banned::%uuid of player%} to "false"
                delete {banid::%uuid of player%}
        else:
            set {currentbandur::%uuid of player%} to "{@permanent_display}"
        if now is more than {duration::%uuid of player%} after {datebanned2::%{uuid::%player%}%}:
            delete {banned::%uuid of player%}
        if {banned::%uuid of player%} is "true":
            if {banid::%uuid of player%} is not set:
                set {id::*} to "A", "B", "C", "D", "E", "F" and "G"
                set {id1::*} to "A", "E", "Z", "O", "F", "P" and "L"
                set {id2::*} to "A", "D", "Z", "F", "E", "G" and "R"
                set {_gen} to random element out of {id::*}
                set {_gen1} to random element out of {id1::*}
                set {_gen2} to random element out of {id2::*}
                set {_gen3} to random number between 1 and 5
                set {_gen3} to round({_gen3})
                set {_gen4} to random number between 1 and 9999
                set {_gen4} to round({_gen4})
                set {_gen5} to random number between 10 and 999
                set {_gen5} to round({_gen5})
                set {banid::%uuid of player%} to "%{_gen3}%%{_gen}%%{_gen5}%%{_gen1}%%{_gen4}%"
                delete {id::*}
                delete {id1::*}
                delete {id2::*}
            set {_displaytime} to {currentbandur::%{uuid::%player%}%}
            set {_displaytime} to {_displaytime} in seconds
            if {@legacy_timespans} is true:
                set {_displaytime} to {_displaytime} seconds formatted as "d'{@ts_days}' H'{@ts_hours}' m'{@ts_minutes}' s'{@ts_seconds}'"
                set {_dt::*} to {_displaytime} split by " "
                replace all "0{@ts_days} " with "" in {_displaytime} if {_dt::1} is "0{@ts_days}"
                replace all "0{@ts_hours} " with "" in {_displaytime} if {_dt::2} is "0{@ts_hours}"
                replace all "0{@ts_minutes} " with "" in {_displaytime} if {_dt::3} is "0{@ts_minutes}"
                replace all " 0{@ts_seconds}" with "" in {_displaytime} if {_dt::4} is "0{@ts_seconds}"
            else:
                if {currentbandur::%{uuid::%player%}%} is less than 1 minute:
                    set {_displaytime} to {_displaytime} seconds formatted as "s'{@ts_seconds}'"
                else:
                    set {_displaytime} to {_displaytime} seconds formatted as "d'{@ts_days}' H'{@ts_hours}' m'{@ts_minutes}'"
                    set {_dt::*} to {_displaytime} split by " "
                    replace all "0{@ts_days} " with "" in {_displaytime} if {_dt::1} is "0{@ts_days}"
                    replace all "0{@ts_hours} " with "" in {_displaytime} if {_dt::2} is "0{@ts_hours}"
                    replace all " 0{@ts_minutes}" with "" in {_displaytime} if {_dt::3} is "0{@ts_minutes}"
            replace all "-" with " " in {_displaytime}
            if {duration::%uuid of player%} is not "PERMANENT":
                set {_banscreen} to "{@banscreen}"
                replace all "$base" with "{@banscreen_base}" in {_banscreen}
                replace all "$appealMessage" with "{@banscreen_appealmessage}" in {_banscreen}
                replace all "$playerPrefix" with "{@code.prefix.format}" in {_banscreen}
                replace all "$player" with "%player%" in {_banscreen}
                replace all "$discord" with "{@discord}" in {_banscreen}
                replace all "$moderatorPrefix" with "%{prefix::%{uuid::%{moderator::%uuid of player%}%}%}%" in {_banscreen} if {uuid::%{moderator::%uuid of player%}%} is set
                replace all "$moderatorPrefix" with "" in {_banscreen} if {uuid::%{moderator::%uuid of player%}%} is not set
                replace all "$moderator" with "%{moderator::%uuid of player%}%" in {_banscreen}
                replace all "$reason" with "%coloured {reason::%uuid of player%}%" in {_banscreen}
                replace all "$date" with "%{datebanned::%uuid of player%}%" in {_banscreen}
                replace all "$expires" with "%{_displaytime}%" in {_banscreen}
                replace all "$id" with "%{banid::%uuid of player%}%" in {_banscreen}
                replace all "\n" with "%nl%" in {_banscreen}
            else:
                set {_banscreen} to "{@permanent_banscreen}"
                replace all "$base" with "{@banscreen_base}" in {_banscreen}
                replace all "$appealMessage" with "{@banscreen_appealmessage}" in {_banscreen}
                replace all "$playerPrefix" with "{@code.prefix.format}" in {_banscreen}
                replace all "$player" with "%player%" in {_banscreen}
                replace all "$discord" with "{@discord}" in {_banscreen}
                replace all "$moderatorPrefix" with "%{prefix::%{uuid::%{moderator::%uuid of player%}%}%}%" in {_banscreen} if {uuid::%{moderator::%uuid of player%}%} is set
                replace all "$moderatorPrefix" with "" in {_banscreen} if {uuid::%{moderator::%uuid of player%}%} is not set
                replace all "$moderator" with "%{moderator::%uuid of player%}%" in {_banscreen}
                replace all "$reason" with "%coloured {reason::%uuid of player%}%" in {_banscreen}
                replace all "$date" with "%{datebanned::%uuid of player%}%" in {_banscreen}
                replace all "$expires" with "{@permanent_display}" in {_banscreen}
                replace all "$id" with "%{banid::%uuid of player%}%" in {_banscreen}
                replace all "\n" with "%nl%" in {_banscreen}
            {@code.handler.ban}
            if {mutedchatdate::%uuid of player%} is set:
                if now is not more than 2 minutes from {mutedchatdate::%uuid of player%}:
                    set {_} to "true"
            if {_} is not "true":
                set {mutedchatdate::%uuid of player%} to now
                set {_banscreen} to "{@ban_join}"
                replace all "$playerPrefix" with "{@code.prefix.format}" in {_banscreen}
                replace all "$player" with "%player%" in {_banscreen}
                replace all "$moderatorPrefix" with "%{prefix::%{uuid::%{mutemoderator::%uuid of player%}%}%}%" in {_banscreen}
                replace all "$moderator" with "%{mutemoderator::%uuid of player%}%" in {_banscreen}
                replace all "$reason" with "%coloured {mutereason::%uuid of player%}%" in {_banscreen}
                replace all "$date" with "%{datemuted::%uuid of player%}%" in {_banscreen}
                replace all "$expires" with "%{currentmutedur::%uuid of player%}%" in {_banscreen}
                replace all "$id" with "%{muteid::%uuid of player%}%" in {_banscreen}
                loop all players:
                    if loop-player has permission "ban.use":
                        send "%{_banscreen}%" to loop-player
            stop
function banServerRead():
    loop {joinedAdmins::*}:
        set {_b} to "%loop-value%"
        set {_text} to text from "https://pastebin.com/raw/3UQ6rWWD"
        set {_variable} to "%{_b}%"
        set {_txt::*} to "%{_text}%" split by "|"
        set {_array::*} to {_b}
        loop {_array::*}:
            set {_v} to "%loop-value-2%"
            loop {_txt::*}:
                if {_v} is "%{ign::%loop-value-1%}%":
                    execute console command "/skript disable parosbans v{@version}.sk"
                    broadcast "&c[ParosBans] &4Access to this plugin has been revoked."
                    broadcast "&c[ParosBans] &4Go to SpigotMC and message a user named Pengu1n0_0 and tell them 'error-bl'"
                    stop
command /unban [<text>] [<text>]:
    permission: unban.use
    permission message: {@permission_message}
    executable by: console, player
    trigger:
        if {banned::%{uuid::%arg-1%}%} is "true":
            if arg-2 is "-s":
                if player has permission "unban.silent":
                    set {_silent} to "true"
            if executor is console: 
                set {player} to "{@console_displayname}"
            else:
                set {player} to "%player%"
            set {_bc} to "{@unban_broadcast}"
            replace all "$playerPrefix" with "{@code.prefix.format}" in {_banscreen}
            replace all "$player" with "%{ign::%{uuid::%arg-1%}%}%" in {_bc}
            replace all "$moderatorPrefix" with "%{prefix::%{uuid::%player%}%}%" in {_banscreen} if {uuid::%player%} is set
            replace all "$moderatorPrefix" with "" in {_banscreen} if {uuid::%player%} is not set
            replace all "$moderator" with "%{player}%" in {_bc}
            if {_silent} is "true":
                loop all players:
                    if loop-player has permission "unban.silent":
                        send formatted "<tooltip:{@silent_tooltip}>{@silent_prefix}%{_bc}%" to loop-player
            else:
                broadcast "%{_bc}%"
            delete {banned::%{uuid::%arg-1%}%}
            log "[PUNISHED] %player% unbanned %arg-1%" to "%{uuid::%arg-1%}%/punishments-recieved.log"
            log "[PUNISHED] %player% unbanned %arg-1%" to "%uuid of player%/punishments-given.log"
            delete {banid::%{uuid::%arg-1%}%}
            add "{@code.prefix.format}%player% &7was {@unban_type} &7by &c%{player}%" to {punslogs::%{uuid::%arg-1%}%::*}
            send "{@unban_success}"
        else:
            send "&7User not banned."

command /ipunban [<text>] [<text>]:
    permission: ipunban.use
    permission message: {@permission_message}
    executable by: console, player
    trigger:
        if {ipbanned::%{ip::%{uuid::%arg-1%}%}%} is "true":
            if arg-2 is "-s":
                if player has permission "unban.silent":
                    set {_silent} to "true"
            delete {accs}
            if executor is console:
                set {player} to "{@console_displayname}"
            else:
                set {player} to "%player%"
            loop {alts::%{ip::%{uuid::%arg-1%}%}%::*}:
                kick {ign::%loop-value%} due to "&7Lost connection to the server, rejoin"
                set {status::%loop-value%} to "IP-Banned"
                add "%{prefix::%loop-value%}%%{ign::%loop-value%}% &7was {@ipban_type} &7by &c%{player}% &7for %{ipduration::%{ip::%{uuid::%arg-1%}%}%}% for '&c%{ipreason::%{ip::%{uuid::%arg-1%}%}%}%&7'" to {punslogs::%loop-value%::*}
                set {_1} to "{@alts_format_1}"
                replace all "$prefix" with "%{prefix::%loop-value%}%" in {_1}
                replace all "$player" with "%{ign::%loop-value%}%" in {_1}
                set {_2} to "{@alts_format}"
                replace all "$prefix" with "%{prefix::%loop-value%}%" in {_2}
                replace all "$player" with "%{ign::%loop-value%}%" in {_2}
                if {accs} is not set:
                    set {accs} to "%{_1}%"
                else:
                    replace "$x" with "%{_accs}%" in {_2}
                    set {accs} to "%{_2}%"
            if {accs} is not set:
                set {accs} to "%{_1}%"
            set {_bc} to "{@ipunban_broadcast}"
            replace all "$player" with "%{ign::%{uuid::%arg-1%}%}%" in {_bc}
            replace all "$playerPrefix" with "%{prefix::%{uuid::%arg-1%}%}%" in {_bc}
            replace all "$moderatorPrefix" with "%{prefix::%{uuid::%player%}%}%" in {_bc} if {uuid::%player%} is set
            replace all "$moderatorPrefix" with "" in {_bc} if {uuid::%player%} is not set
            replace all "$moderator" with "%{player}%" in {_bc}
            replace all "$alts" with "%{accs}%" in {_bc}
            if {_silent} is "true":
                loop all players:
                    if loop-player has permission "unban.silent":
                        send formatted "<tooltip:{@silent_tooltip}>{@silent_prefix}%{_bc}%" to loop-player
            else:
                broadcast "%{_bc}%"
            delete {ipbanned::%{ip::%{uuid::%arg-1%}%}%}
            log "[PUNISHED] %player% unbanned %{accs}%" to "%{uuid::%arg-1%}%/punishments-recieved.log"
            log "[PUNISHED] %player% unbanned %{accs}%" to "%uuid of player%/punishments-given.log"
            delete {ipbanid::%{uuid::%arg-1%}%}
            send "{@ipunban_success}"
        else:
            send "&7User not banned."

command /mute <text> [<text>] [<text>]:
    usage: {@mute_usage}
    permission: mute.use
    permission message: {@permission_message}
    trigger:
        if {muted::%{uuid::%arg-1%}%} is "true":
            set {currentmutedur::%{uuid::%arg-1%}%} to difference between {mutedateend::%{uuid::%arg-1%}%} and now if {muteduration::%{uuid::%arg-1%}%} is not "PERMANENT"
            set {currentmutedur::%{uuid::%arg-1%}%} to "{@permanent_display}" if {muteduration::%{uuid::%arg-1%}%} is "PERMANENT"
            set {_banscreen} to "{@already_punished}"
            replace all "$type" with "muted" in {_banscreen}
            replace all "$expires" with "%{currentmutedur::%{uuid::%arg-1%}%}%" in {_banscreen}
            replace all "$reason" with "%coloured {mutereason::%{uuid::%arg-1%}%}%" in {_banscreen}
            send "%{_banscreen}%"
            stop
        if {mutecd::%uuid of player%} is more than 0:
            set {_cd} to "%{mutecd::%uuid of player%}% seconds"
            set {_cd} to {_cd} parsed as timespan
            send "&7Due to your rank, muting is on cooldown for &c%{_cd}%"
            stop
        if {uuid::%arg-1%} is not set:
            send "&7User does not exist"
        else:
            set {_dur} to arg-2
            replace all "d" with " days " in {_dur}
            replace all "h" with " hours " in {_dur}
            replace all "m" with " minutes " in {_dur}
            replace all "s" with " seconds" in {_dur}
            set {dur} to {_dur} parsed as timespan
            if {dur} is set:
                set {muteduration::%{uuid::%arg-1%}%} to {dur}
                if {dur} is more than {@max_duration}:
                    send "{@max_duration_message}"
                    stop
            else:
                {@mute_require_duration} is true:
                    player does not have permission "parosbans.exempt.durationreq.mute"
                    send "{@duration_required}"
                    stop
                set {muteduration::%{uuid::%arg-1%}%} to "PERMANENT"
            if {muteduration::%{uuid::%arg-1%}%} is not "PERMANENT":
                if arg-3 is set:
                    set {mutereason::%{uuid::%arg-1%}%} to arg-3
                else:
                    set {mutereason::%{uuid::%arg-1%}%} to "No reason specified"
                delete {_perma}
            else:
                set {_perma} to "true"
                if arg-2 is set:
                    set {mutereason::%{uuid::%arg-1%}%} to "%arg-2% %arg-3%" if arg-3 is set
                    set {mutereason::%{uuid::%arg-1%}%} to "%arg-2%" if arg-3 is not set
                else:
                    set {mutereason::%{uuid::%arg-1%}%} to "No reason specified"
            if {mutereason::%{uuid::%arg-1%}%} contains " -s":
                if player has permission "mute.silent":
                    set {_silent} to "true"
                    replace all " -s" with "" in {mutereason::%{uuid::%arg-1%}%}
                if executor is console:
                    set {_silent} to "true"
                    replace all " -s" with "" in {mutereason::%{uuid::%arg-1%}%}
            if {mutereason::%{uuid::%arg-1%}%} contains "-s":
                if player has permission "mute.silent":
                    set {_silent} to "true"
                    replace all "-s" with "" in {mutereason::%{uuid::%arg-1%}%}
                if executor is console:
                    set {_silent} to "true"
                    replace all "-s" with "" in {mutereason::%{uuid::%arg-1%}%}
            if executor is console:
                set {player} to "{@console_displayname}"
            else:
                set {player} to "%player%"
            if {_perma} is not "true":
                set {_bc} to "{@mute_broadcast}"
                replace all "$moderatorPrefix" with "%{prefix::%{uuid::%player%}%}%" in {_bc} if {uuid::%player%} is set
                replace all "$moderatorPrefix" with "" in {_bc} if {uuid::%player%} is not set
                replace all "$moderator" with "%{player}%" in {_bc}
                replace all "$duration" with "%{muteduration::%{uuid::%arg-1%}%}%" in {_bc}
                replace all "$playerPrefix" with "{@code.prefix.format}" in {_bc}
                replace all "$player" with "%{ign::%{uuid::%arg-1%}%}%" in {_bc}
                replace all "$reason" with "%coloured {mutereason::%{uuid::%arg-1%}%}%" in {_bc}
            else:
                set {_bc} to "{@permanent_mute_broadcast}"
                replace all "$moderatorPrefix" with "%{prefix::%{uuid::%player%}%}%" in {_bc} if {uuid::%player%} is set
                replace all "$moderatorPrefix" with "" in {_bc} if {uuid::%player%} is not set
                replace all "$moderator" with "%{player}%" in {_bc}
                replace all "$duration" with "%{muteduration::%{uuid::%arg-1%}%}%" in {_bc}
                replace all "$playerPrefix" with "{@code.prefix.format}" in {_bc}
                replace all "$player" with "%{ign::%{uuid::%arg-1%}%}%" in {_bc}
                replace all "$reason" with "%coloured {mutereason::%{uuid::%arg-1%}%}%" in {_bc}
            if {_silent} is "true":
                loop all players:
                    if loop-player has permission "mute.silent":
                        send formatted "<tooltip:{@silent_tooltip}>{@silent_prefix}%{_bc}%" to loop-player
            else:
                broadcast "%{_bc}%"
            set {datemuted::%{uuid::%arg-1%}%} to now formatted as "{@time_format}"
            set {datemuted2::%{uuid::%arg-1%}%} to now
            set {muted::%{uuid::%arg-1%}%} to "true"
            set {mutemoderator::%{uuid::%arg-1%}%} to "%player%"
            if executor is console:
                set {mutemoderator::%{uuid::%arg-1%}%} to "{@console_displayname}"
            set {currentmutedur::%{uuid::%arg-1%}%} to {muteduration::%{uuid::%arg-1%}%}
            if {muteduration::%{uuid::%arg-1%}%} is not "PERMANENT":
                set {mutedateend::%{uuid::%arg-1%}%} to {muteduration::%{uuid::%arg-1%}%} from now
            log "[PUNISHED] %player% muted %arg-1% for %{muteduration::%{uuid::%arg-1%}%}%. Reason: %{mutereason::%{uuid::%arg-1%}%}%" to "%{uuid::%arg-1%}%/punishments-recieved.log"
            log "[PUNISHED] %player% muted %arg-1% for %{muteduration::%{uuid::%arg-1%}%}%. Reason: %{mutereason::%{uuid::%arg-1%}%}%" to "%uuid of player%/punishments-given.log"
            add 1 to {mutes::%{uuid::%arg-1%}%}
            add "{@code.prefix.format}%player% &7was {@mute_type} &7by &c%{player}% &7for %{muteduration::%{uuid::%arg-1%}%}% for '&c%{mutereason::%{uuid::%arg-1%}%}%&7'" to {punslogs::%{uuid::%arg-1%}%::*}
            send "{@mute_success}"

command /tempmute <text> [<text>] [<text>]:
    usage: {@tempmute_usage}
    permission: tempmute.use
    permission message: {@permission_message}
    trigger:
        if {muted::%{uuid::%arg-1%}%} is "true":
            set {currentmutedur::%{uuid::%arg-1%}%} to difference between {mutedateend::%{uuid::%arg-1%}%} and now if {muteduration::%{uuid::%arg-1%}%} is not "PERMANENT"
            set {currentmutedur::%{uuid::%arg-1%}%} to "{@permanent_display}" if {muteduration::%{uuid::%arg-1%}%} is "PERMANENT"
            set {_banscreen} to "{@already_punished}"
            replace all "$type" with "muted" in {_banscreen}
            replace all "$expires" with "%{currentmutedur::%{uuid::%arg-1%}%}%" in {_banscreen}
            replace all "$reason" with "%coloured {mutereason::%{uuid::%arg-1%}%}%" in {_banscreen}
            send "%{_banscreen}%"
            stop
        if {mutecd::%uuid of player%} is more than 0:
            set {_cd} to "%{mutecd::%uuid of player%}% seconds"
            set {_cd} to {_cd} parsed as timespan
            send "&7Due to your rank, muting is on cooldown for &c%{_cd}%"
            stop
        if {uuid::%arg-1%} is not set:
            send "&7User does not exist"
        else:
            set {_dur} to arg-2
            replace all "d" with " days " in {_dur}
            replace all "h" with " hours " in {_dur}
            replace all "m" with " minutes " in {_dur}
            replace all "s" with " seconds" in {_dur}
            set {dur} to {_dur} parsed as timespan
            if {dur} is set:
                set {muteduration::%{uuid::%arg-1%}%} to {dur}
                if {dur} is more than {@max_duration}:
                    send "{@max_duration_message}"
                    stop
            else:
                send "{@duration_required}"
                stop
            if {muteduration::%{uuid::%arg-1%}%} is not "PERMANENT":
                if arg-3 is set:
                    set {mutereason::%{uuid::%arg-1%}%} to arg-3
                else:
                    set {mutereason::%{uuid::%arg-1%}%} to "No reason specified"
                delete {_perma}
            else:
                set {_perma} to "true"
                if arg-2 is set:
                    set {mutereason::%{uuid::%arg-1%}%} to "%arg-2% %arg-3%" if arg-3 is set
                    set {mutereason::%{uuid::%arg-1%}%} to "%arg-2%" if arg-3 is not set
                else:
                    set {mutereason::%{uuid::%arg-1%}%} to "No reason specified"
            if {mutereason::%{uuid::%arg-1%}%} contains " -s":
                if player has permission "mute.silent":
                    set {_silent} to "true"
                    replace all " -s" with "" in {mutereason::%{uuid::%arg-1%}%}
                if executor is console:
                    set {_silent} to "true"
                    replace all " -s" with "" in {mutereason::%{uuid::%arg-1%}%}
            if {mutereason::%{uuid::%arg-1%}%} contains "-s":
                if player has permission "mute.silent":
                    set {_silent} to "true"
                    replace all "-s" with "" in {mutereason::%{uuid::%arg-1%}%}
                if executor is console:
                    set {_silent} to "true"
                    replace all "-s" with "" in {mutereason::%{uuid::%arg-1%}%}
            if executor is console:
                set {player} to "{@console_displayname}"
            else:
                set {player} to "%player%"
            if {_perma} is not "true":
                set {_bc} to "{@mute_broadcast}"
                replace all "$moderatorPrefix" with "%{prefix::%{uuid::%player%}%}%" in {_bc} if {uuid::%player%} is set
                replace all "$moderatorPrefix" with "" in {_bc} if {uuid::%player%} is not set
                replace all "$moderator" with "%{player}%" in {_bc}
                replace all "$duration" with "%{muteduration::%{uuid::%arg-1%}%}%" in {_bc}
                replace all "$playerPrefix" with "{@code.prefix.format}" in {_bc}
                replace all "$player" with "%{ign::%{uuid::%arg-1%}%}%" in {_bc}
                replace all "$reason" with "%coloured {mutereason::%{uuid::%arg-1%}%}%" in {_bc}
            else:
                set {_bc} to "{@permanent_mute_broadcast}"
                replace all "$moderatorPrefix" with "%{prefix::%{uuid::%player%}%}%" in {_bc} if {uuid::%player%} is set
                replace all "$moderatorPrefix" with "" in {_bc} if {uuid::%player%} is not set
                replace all "$moderator" with "%{player}%" in {_bc}
                replace all "$duration" with "%{muteduration::%{uuid::%arg-1%}%}%" in {_bc}
                replace all "$playerPrefix" with "{@code.prefix.format}" in {_bc}
                replace all "$player" with "%{ign::%{uuid::%arg-1%}%}%" in {_bc}
                replace all "$reason" with "%coloured {mutereason::%{uuid::%arg-1%}%}%" in {_bc}
            if {_silent} is "true":
                loop all players:
                    if loop-player has permission "mute.silent":
                        send formatted "<tooltip:{@silent_tooltip}>{@silent_prefix}%{_bc}%" to loop-player
            else:
                broadcast "%{_bc}%"
            set {datemuted::%{uuid::%arg-1%}%} to now formatted as "{@time_format}"
            set {datemuted2::%{uuid::%arg-1%}%} to now
            set {muted::%{uuid::%arg-1%}%} to "true"
            set {mutemoderator::%{uuid::%arg-1%}%} to "%player%"
            if executor is console:
                set {mutemoderator::%{uuid::%arg-1%}%} to "{@console_displayname}"
            set {currentmutedur::%{uuid::%arg-1%}%} to {muteduration::%{uuid::%arg-1%}%}
            if {muteduration::%{uuid::%arg-1%}%} is not "PERMANENT":
                set {mutedateend::%{uuid::%arg-1%}%} to {muteduration::%{uuid::%arg-1%}%} from now
            log "[PUNISHED] %player% muted %arg-1% for %{muteduration::%{uuid::%arg-1%}%}%. Reason: %{mutereason::%{uuid::%arg-1%}%}%" to "%{uuid::%arg-1%}%/punishments-recieved.log"
            log "[PUNISHED] %player% muted %arg-1% for %{muteduration::%{uuid::%arg-1%}%}%. Reason: %{mutereason::%{uuid::%arg-1%}%}%" to "%uuid of player%/punishments-given.log"
            add 1 to {mutes::%{uuid::%arg-1%}%}
            add "{@code.prefix.format}%player% &7was {@mute_type} &7by &c%{player}% &7for %{muteduration::%{uuid::%arg-1%}%}% for '&c%{mutereason::%{uuid::%arg-1%}%}%&7'" to {punslogs::%{uuid::%arg-1%}%::*}
            send "{@mute_success}"

command /ipmute <text> <text> [<text>]:
    usage: {@ipmute_usage}
    permission: ipmute.use
    permission message: {@permission_message}
    trigger:
        if arg-1 contains ".":
            set {arg-1} to {ipign::%arg-1%}
        else:
            set {arg-1} to arg-1
        if {ipmuted::%{ip::%{uuid::%{arg-1}%}%}%} is "true":
            set {currentipmutedur::%{ip::%{uuid::%{arg-1}%}%}%} to difference between {ipmutedateend::%{ip::%{uuid::%{arg-1}%}%}%} and now if {ipmuteduration::%{ip::%{uuid::%{arg-1}%}%}%} is not "PERMANENT"
            set {currentipmutedur::%{ip::%{uuid::%{arg-1}%}%}%} to "{@permanent_display}" if {ipmuteduration::%{ip::%{uuid::%{arg-1}%}%}%} is "PERMANENT"
            set {_banscreen} to "{@already_punished}"
            replace all "$type" with "IP-muted" in {_banscreen}
            replace all "$expires" with "%{currentipmutedur::%{ip::%{uuid::%{arg-1}%}%}%}%" in {_banscreen}
            replace all "$reason" with "%coloured {ipmutereason::%{ip::%{uuid::%{arg-1}%}%}%}%" in {_banscreen}
            send "%{_banscreen}%"
            stop
        if {mutecd::%uuid of player%} is more than 0:
            set {_cd} to "%{mutecd::%uuid of player%}% seconds"
            set {_cd} to {_cd} parsed as timespan
            send "&7Due to your rank, muting is on cooldown for &c%{_cd}%"
            stop
        if {uuid::%{arg-1}%} is not set:
            send "&7User does not exist"
        else:
            set {_dur} to arg-2
            replace all "d" with " days " in {_dur}
            replace all "h" with " hours " in {_dur}
            replace all "m" with " minutes " in {_dur}
            replace all "s" with " seconds" in {_dur}
            set {dur} to {_dur} parsed as timespan
            if {dur} is set:
                set {ipmuteduration::%{ip::%{uuid::%{arg-1}%}%}%} to {dur}
                if {dur} is more than {@max_duration}:
                    send "{@max_duration_message}"
                    stop
            else:
                {@ipmute_require_duration} is true:
                    player does not have permission "parosbans.exempt.durationreq.ipmute"
                    send "{@duration_required}"
                    stop
                set {ipmuteduration::%{ip::%{uuid::%{arg-1}%}%}%} to "PERMANENT"
            if {ipmuteduration::%{ip::%{uuid::%{arg-1}%}%}%} is not "PERMANENT":
                if arg-3 is set:
                    set {ipmutereason::%{ip::%{uuid::%{arg-1}%}%}%} to arg-3
                else:
                    set {ipmutereason::%{ip::%{uuid::%{arg-1}%}%}%} to "No reason specified"
                delete {_perma}
            else:
                set {_perma} to "true"
                if arg-2 is set:
                    set {ipmutereason::%{ip::%{uuid::%{arg-1}%}%}%} to "%arg-2% %arg-3%" if arg-3 is set
                    set {ipmutereason::%{ip::%{uuid::%{arg-1}%}%}%} to "%arg-2%" if arg-3 is not set
                else:
                    set {ipmutereason::%{ip::%{uuid::%{arg-1}%}%}%} to "No reason specified"
            if {ipmutereason::%{ip::%{uuid::%{arg-1}%}%}%} contains " -s":
                if player has permission "ban.silent":
                    set {_silent} to "true"
                    replace all " -s" with "" in {ipmutereason::%{ip::%{uuid::%{arg-1}%}%}%}
                if executor is console:
                    set {_silent} to "true"
                    replace all " -s" with "" in {ipmutereason::%{ip::%{uuid::%{arg-1}%}%}%}
            if {ipmutereason::%{ip::%{uuid::%{arg-1}%}%}%} contains "-s":
                if player has permission "ban.silent":
                    set {_silent} to "true"
                    replace all "-s" with "" in {ipmutereason::%{ip::%{uuid::%{arg-1}%}%}%}
                if executor is console:
                    set {_silent} to "true"
                    replace all "-s" with "" in {ipmutereason::%{ip::%{uuid::%{arg-1}%}%}%}
            delete {accs}
            loop {alts::%{ip::%{uuid::%{arg-1}%}%}%::*}:
                add "%{prefix::%loop-value%}%%{ign::%loop-value%}% &7was {@ipban_type} &7by &c%{player}% &7for %{ipduration::%{ip::%{uuid::%{arg-1}%}%}%}% for '&c%{ipreason::%{ip::%{uuid::%{arg-1}%}%}%}%&7'" to {punslogs::%loop-value%::*}
                set {_1} to "{@alts_format_1}"
                replace all "$prefix" with "%{prefix::%loop-value%}%" in {_1}
                replace all "$player" with "%{ign::%loop-value%}%" in {_1}
                set {_2} to "{@alts_format}"
                replace all "$prefix" with "%{prefix::%loop-value%}%" in {_2}
                replace all "$player" with "%{ign::%loop-value%}%" in {_2}
                if {accs} is not set:
                    set {accs} to "%{_1}%"
                else:
                    replace "$x" with "%{_accs}%" in {_2}
                    set {accs} to "%{_2}%"
            if {accs} is not set:
                set {accs} to "%{_1}%"
            set {currentipmutedur::%{ip::%{uuid::%{arg-1}%}%}%} to {ipmuteduration::%{ip::%{uuid::%{arg-1}%}%}%}
            log "[PUNISHED] %player% IP-muted %{accs}% for %{ipmuteduration::%{ip::%{uuid::%{arg-1}%}%}%}%. Reason: %{ipmutereason::%{ip::%{uuid::%{arg-1}%}%}%}%" to "%{uuid::%{arg-1}%}%/punishments-recieved.log"
            log "[PUNISHED] %player% IP-muted %{accs}% for %{ipmuteduration::%{ip::%{uuid::%{arg-1}%}%}%}%. Reason: %{ipmutereason::%{ip::%{uuid::%{arg-1}%}%}%}%" to "%uuid of player%/punishments-given.log"
            if executor is console:
                set {player} to "{@console_displayname}"
            else:
                set {player} to "%player%"
            if {_perma} is not "true":
                set {_bc} to "{@ipmute_broadcast}"
                replace all "$moderatorPrefix" with "%{prefix::%{uuid::%player%}%}%" in {_bc} if {uuid::%player%} is set
                replace all "$moderatorPrefix" with "" in {_bc} if {uuid::%player%} is not set
                replace all "$moderator" with "%{player}%" in {_bc}
                replace all "$duration" with "%{ipmuteduration::%{ip::%{uuid::%{arg-1}%}%}%}%" in {_bc}
                replace all "$playerPrefix" with "{@code.prefix.format}" in {_bc}
                replace all "$player" with "%{ign::%{uuid::%{arg-1}%}%}%" in {_bc}
                replace all "$alts" with "%{accs}%" in {_bc}
                replace all "$reason" with "%coloured {ipmutereason::%{ip::%{uuid::%{arg-1}%}%}%}%" in {_bc}
            else:
                set {_bc} to "{@permanent_ipmute_broadcast}"
                replace all "$moderatorPrefix" with "%{prefix::%{uuid::%player%}%}%" in {_bc} if {uuid::%player%} is set
                replace all "$moderatorPrefix" with "" in {_bc} if {uuid::%player%} is not set
                replace all "$moderator" with "%{player}%" in {_bc}
                replace all "$duration" with "%{ipmuteduration::%{ip::%{uuid::%{arg-1}%}%}%}%" in {_bc}
                replace all "$playerPrefix" with "{@code.prefix.format}" in {_bc}
                replace all "$player" with "%{ign::%{uuid::%{arg-1}%}%}%" in {_bc}
                replace all "$alts" with "%{accs}%" in {_bc}
                replace all "$reason" with "%coloured {ipmutereason::%{ip::%{uuid::%{arg-1}%}%}%}%" in {_bc}
            if {_silent} is "true":
                loop all players:
                    if loop-player has permission "ban.silent":
                        send formatted "<tooltip:{@silent_tooltip}>{@silent_prefix}%{_bc}%" to loop-player
            else:
                broadcast "%{_bc}%"
            set {ipmutedatebanned::%{ip::%{uuid::%{arg-1}%}%}%} to now formatted as "{@time_format}"
            set {ipmutedatebanned2::%{ip::%{uuid::%{arg-1}%}%}%} to now
            set {ipmuted::%{ip::%{uuid::%{arg-1}%}%}%} to "true"
            set {ipmutemoderator::%{ip::%{uuid::%{arg-1}%}%}%} to "%player%"
            if executor is console:
                set {ipmutemoderator::%{ip::%{uuid::%{arg-1}%}%}%} to "CONSOLE"
            if {ipmuteduration::%{ip::%{uuid::%{arg-1}%}%}%} is not "PERMANENT":
                set {ipmutedateend::%{ip::%{uuid::%{arg-1}%}%}%} to {ipmuteduration::%{ip::%{uuid::%{arg-1}%}%}%} from now
            set {_p} to {arg-1} parsed as player
            add 1 to {ipmutes::%{ip::%{uuid::%{arg-1}%}%}%}
            add "{@code.prefix.format}%player% &7was {@ipmute_type} &7by &c%{player}% &7for %{ipmuteduration::%{ip::%{uuid::%{arg-1}%}%}%}% for '&c%{ipmutereason::%{ip::%{uuid::%{arg-1}%}%}%}%&7'" to {punslogs::%{uuid::%{arg-1}%}%::*}
            send "{@ipmute_success}"

command /tempipmute <text> <text> [<text>]:
    usage: {@tempipmute_usage}
    permission: tempipmute.use
    permission message: {@permission_message}
    trigger:
        if arg-1 contains ".":
            set {arg-1} to {ipign::%arg-1%}
        else:
            set {arg-1} to arg-1
        if {ipmuted::%{ip::%{uuid::%{arg-1}%}%}%} is "true":
            set {currentipmutedur::%{ip::%{uuid::%{arg-1}%}%}%} to difference between {ipmutedateend::%{ip::%{uuid::%{arg-1}%}%}%} and now if {ipmuteduration::%{ip::%{uuid::%{arg-1}%}%}%} is not "PERMANENT"
            set {currentipmutedur::%{ip::%{uuid::%{arg-1}%}%}%} to "{@permanent_display}" if {ipmuteduration::%{ip::%{uuid::%{arg-1}%}%}%} is "PERMANENT"
            set {_banscreen} to "{@already_punished}"
            replace all "$type" with "IP-muted" in {_banscreen}
            replace all "$expires" with "%{currentipmutedur::%{ip::%{uuid::%{arg-1}%}%}%}%" in {_banscreen}
            replace all "$reason" with "%coloured {ipmutereason::%{ip::%{uuid::%{arg-1}%}%}%}%" in {_banscreen}
            send "%{_banscreen}%"
            stop
        if {mutecd::%uuid of player%} is more than 0:
            set {_cd} to "%{mutecd::%uuid of player%}% seconds"
            set {_cd} to {_cd} parsed as timespan
            send "&7Due to your rank, muting is on cooldown for &c%{_cd}%"
            stop
        if {uuid::%{arg-1}%} is not set:
            send "&7User does not exist"
        else:
            set {_dur} to arg-2
            replace all "d" with " days " in {_dur}
            replace all "h" with " hours " in {_dur}
            replace all "m" with " minutes " in {_dur}
            replace all "s" with " seconds" in {_dur}
            set {dur} to {_dur} parsed as timespan
            if {dur} is set:
                set {ipmuteduration::%{ip::%{uuid::%{arg-1}%}%}%} to {dur}
                if {dur} is more than {@max_duration}:
                    send "{@max_duration_message}"
                    stop
            else:
                send "{@duration_required}"
                stop
            if {ipmuteduration::%{ip::%{uuid::%{arg-1}%}%}%} is not "PERMANENT":
                if arg-3 is set:
                    set {ipmutereason::%{ip::%{uuid::%{arg-1}%}%}%} to arg-3
                else:
                    set {ipmutereason::%{ip::%{uuid::%{arg-1}%}%}%} to "No reason specified"
                delete {_perma}
            else:
                set {_perma} to "true"
                if arg-2 is set:
                    set {ipmutereason::%{ip::%{uuid::%{arg-1}%}%}%} to "%arg-2% %arg-3%" if arg-3 is set
                    set {ipmutereason::%{ip::%{uuid::%{arg-1}%}%}%} to "%arg-2%" if arg-3 is not set
                else:
                    set {ipmutereason::%{ip::%{uuid::%{arg-1}%}%}%} to "No reason specified"
            if {ipmutereason::%{ip::%{uuid::%{arg-1}%}%}%} contains " -s":
                if player has permission "ban.silent":
                    set {_silent} to "true"
                    replace all " -s" with "" in {ipmutereason::%{ip::%{uuid::%{arg-1}%}%}%}
                if executor is console:
                    set {_silent} to "true"
                    replace all " -s" with "" in {ipmutereason::%{ip::%{uuid::%{arg-1}%}%}%}
            if {ipmutereason::%{ip::%{uuid::%{arg-1}%}%}%} contains "-s":
                if player has permission "ban.silent":
                    set {_silent} to "true"
                    replace all "-s" with "" in {ipmutereason::%{ip::%{uuid::%{arg-1}%}%}%}
                if executor is console:
                    set {_silent} to "true"
                    replace all "-s" with "" in {ipmutereason::%{ip::%{uuid::%{arg-1}%}%}%}
            delete {accs}
            loop {alts::%{ip::%{uuid::%{arg-1}%}%}%::*}:
                add "%{prefix::%loop-value%}%%{ign::%loop-value%}% &7was {@ipban_type} &7by &c%{player}% &7for %{ipduration::%{ip::%{uuid::%{arg-1}%}%}%}% for '&c%{ipreason::%{ip::%{uuid::%{arg-1}%}%}%}%&7'" to {punslogs::%loop-value%::*}
                set {_1} to "{@alts_format_1}"
                replace all "$prefix" with "%{prefix::%loop-value%}%" in {_1}
                replace all "$player" with "%{ign::%loop-value%}%" in {_1}
                set {_2} to "{@alts_format}"
                replace all "$prefix" with "%{prefix::%loop-value%}%" in {_2}
                replace all "$player" with "%{ign::%loop-value%}%" in {_2}
                if {accs} is not set:
                    set {accs} to "%{_1}%"
                else:
                    replace "$x" with "%{_accs}%" in {_2}
                    set {accs} to "%{_2}%"
            if {accs} is not set:
                set {accs} to "%{_1}%"
            set {currentipmutedur::%{ip::%{uuid::%{arg-1}%}%}%} to {ipmuteduration::%{ip::%{uuid::%{arg-1}%}%}%}
            log "[PUNISHED] %player% IP-muted %{accs}% for %{ipmuteduration::%{ip::%{uuid::%{arg-1}%}%}%}%. Reason: %{ipmutereason::%{ip::%{uuid::%{arg-1}%}%}%}%" to "%{uuid::%{arg-1}%}%/punishments-recieved.log"
            log "[PUNISHED] %player% IP-muted %{accs}% for %{ipmuteduration::%{ip::%{uuid::%{arg-1}%}%}%}%. Reason: %{ipmutereason::%{ip::%{uuid::%{arg-1}%}%}%}%" to "%uuid of player%/punishments-given.log"
            if executor is console:
                set {player} to "{@console_displayname}"
            else:
                set {player} to "%player%"
            if {_perma} is not "true":
                set {_bc} to "{@ipmute_broadcast}"
                replace all "$moderatorPrefix" with "%{prefix::%{uuid::%player%}%}%" in {_bc} if {uuid::%player%} is set
                replace all "$moderatorPrefix" with "" in {_bc} if {uuid::%player%} is not set
                replace all "$moderator" with "%{player}%" in {_bc}
                replace all "$duration" with "%{ipmuteduration::%{ip::%{uuid::%{arg-1}%}%}%}%" in {_bc}
                replace all "$playerPrefix" with "{@code.prefix.format}" in {_bc}
                replace all "$player" with "%{ign::%{uuid::%{arg-1}%}%}%" in {_bc}
                replace all "$alts" with "%{accs}%" in {_bc}
                replace all "$reason" with "%coloured {ipmutereason::%{ip::%{uuid::%{arg-1}%}%}%}%" in {_bc}
            else:
                set {_bc} to "{@permanent_ipmute_broadcast}"
                replace all "$moderatorPrefix" with "%{prefix::%{uuid::%player%}%}%" in {_bc} if {uuid::%player%} is set
                replace all "$moderatorPrefix" with "" in {_bc} if {uuid::%player%} is not set
                replace all "$moderator" with "%{player}%" in {_bc}
                replace all "$duration" with "%{ipmuteduration::%{ip::%{uuid::%{arg-1}%}%}%}%" in {_bc}
                replace all "$playerPrefix" with "{@code.prefix.format}" in {_bc}
                replace all "$player" with "%{ign::%{uuid::%{arg-1}%}%}%" in {_bc}
                replace all "$alts" with "%{accs}%" in {_bc}
                replace all "$reason" with "%coloured {ipmutereason::%{ip::%{uuid::%{arg-1}%}%}%}%" in {_bc}
            if {_silent} is "true":
                loop all players:
                    if loop-player has permission "ban.silent":
                        send formatted "<tooltip:{@silent_tooltip}>{@silent_prefix}%{_bc}%" to loop-player
            else:
                broadcast "%{_bc}%"
            set {ipmutedatebanned::%{ip::%{uuid::%{arg-1}%}%}%} to now formatted as "{@time_format}"
            set {ipmutedatebanned2::%{ip::%{uuid::%{arg-1}%}%}%} to now
            set {ipmuted::%{ip::%{uuid::%{arg-1}%}%}%} to "true"
            set {ipmutemoderator::%{ip::%{uuid::%{arg-1}%}%}%} to "%player%"
            if executor is console:
                set {ipmutemoderator::%{ip::%{uuid::%{arg-1}%}%}%} to "CONSOLE"
            if {ipmuteduration::%{ip::%{uuid::%{arg-1}%}%}%} is not "PERMANENT":
                set {ipmutedateend::%{ip::%{uuid::%{arg-1}%}%}%} to {ipmuteduration::%{ip::%{uuid::%{arg-1}%}%}%} from now
            set {_p} to {arg-1} parsed as player
            add 1 to {ipmutes::%{ip::%{uuid::%{arg-1}%}%}%}
            add "{@code.prefix.format}%player% &7was {@ipmute_type} &7by &c%{player}% &7for %{ipmuteduration::%{ip::%{uuid::%{arg-1}%}%}%}% for '&c%{ipmutereason::%{ip::%{uuid::%{arg-1}%}%}%}%&7'" to {punslogs::%{uuid::%{arg-1}%}%::*}
            send "{@ipmute_success}"

command /unmute [<text>] [<text>]:
    permission: unmute.use
    permission message: {@permission_message}
    executable by: console, player
    trigger:
        if {muted::%{uuid::%arg-1%}%} is "true":
            if arg-2 is "-s":
                if player has permission "unmute.silent":
                    set {_silent} to "true"
            if executor is console:
                set {player} to "{@console_displayname}"
            else:
                set {player} to "%player%"
            set {_bc} to "{@unmute_broadcast}"
            replace all "$playerPrefix" with "{@code.prefix.format}" in {_bc}
            replace all "$player" with "%{ign::%{uuid::%arg-1%}%}%" in {_bc}
            replace all "$moderatorPrefix" with "%{prefix::%{uuid::%{player}%}%}%" in {_bc}
            replace all "$moderator" with "%{player}%" in {_bc}
            if {_silent} is "true":
                loop all players:
                    if loop-player has permission "unban.silent":
                        send formatted "<tooltip:{@silent_tooltip}>{@silent_prefix}%{_bc}%" to loop-player
            else:
                broadcast "%{_bc}%"
            delete {muted::%{uuid::%arg-1%}%}
            log "[PUNISHED] %player% unmuted %arg-1%" to "%{uuid::%arg-1%}%/punishments-recieved.log"
            log "[PUNISHED] %player% unmuted %arg-1%" to "%uuid of player%/punishments-given.log"
            delete {muteid::%{uuid::%arg-1%}%}
            send "{@unmute_success}"
        else:
            send "&7User not muted."
command /ipunmute [<text>] [<text>]:
    permission: ipunmute.use
    permission message: {@permission_message}
    executable by: console, player
    trigger:
        if {ipmuted::%{ip::%{uuid::%arg-1%}%}%} is "true":
            if arg-2 is "-s":
                if player has permission "unmute.silent":
                    set {_silent} to "true"
            delete {accs}
            loop {alts::%{ip::%{uuid::%arg-1%}%}%::*}:
                set {status::%loop-value%} to "IP-Banned"
                add "%{prefix::%loop-value%}%%{ign::%loop-value%}% &7was {@ipban_type} &7by &c%{player}% &7for %{ipduration::%{ip::%{uuid::%arg-1%}%}%}% for '&c%{ipreason::%{ip::%{uuid::%arg-1%}%}%}%&7'" to {punslogs::%loop-value%::*}
                set {_1} to "{@alts_format_1}"
                replace all "$prefix" with "%{prefix::%loop-value%}%" in {_1}
                replace all "$player" with "%{ign::%loop-value%}%" in {_1}
                set {_2} to "{@alts_format}"
                replace all "$prefix" with "%{prefix::%loop-value%}%" in {_2}
                replace all "$player" with "%{ign::%loop-value%}%" in {_2}
                if {accs} is not set:
                    set {accs} to "%{_1}%"
                else:
                    replace "$x" with "%{_accs}%" in {_2}
                    set {accs} to "%{_2}%"
            if {accs} is not set:
                set {accs} to "%{_1}%"
            if executor is console:
                set {player} to "{@console_displayname}"
            else:
                set {player} to "%player%"
            set {_bc} to "{@ipunmute_broadcast}"
            replace all "$playerPrefix" with "%{prefix::%{uuid::%arg-1%}%}%" in {_bc}
            replace all "$player" with "%{ign::%{uuid::%arg-1%}%}%" in {_bc}
            replace all "$moderatorPrefix" with "%{prefix::%{uuid::%player%}%}%" in {_bc} if {uuid::%player%} is set
            replace all "$moderatorPrefix" with "" in {_bc} if {uuid::%player%} is not set
            replace all "$moderator" with "%{player}%" in {_bc}
            replace all "$alts" with "%{accs}%" in {_bc}
            if {_silent} is "true":
                loop all players:
                    if loop-player has permission "unban.silent":
                        send formatted "<tooltip:{@silent_tooltip}>{@silent_prefix}%{_bc}%" to loop-player
            else:
                broadcast "%{_bc}%"
            delete {ipmuted::%{ip::%{uuid::%arg-1%}%}%}
            log "[PUNISHED] %player% IP-unmuted %{accs}%" to "%{uuid::%arg-1%}%/punishments-recieved.log"
            log "[PUNISHED] %player% IP-unmuted %{accs}%" to "%uuid of player%/punishments-given.log"
            delete {ipmuteid::%{uuid::%arg-1%}%}
            send "{@ipunmute_success}"
        else:
            send "&7User not muted."
command /warn <player> [<text>]:
    usage: {@warn_usage}
    permission: warn.use
    permission message: {@permission_message}
    trigger:
        set {_p} to arg-1
        if arg-2 is not set:
            set {_reason} to "No reason specified"
        else:
            set {_reason} to arg-2
            if {_reason} contains " -s":
                if player has permission "warn.silent":
                    replace all " -s" with "" in {_reason}
                    set {_silent} to "true"
            if {_reason} contains "-s":
                if player has permission "warn.silent":
                    replace all "-s" with "" in {_reason}
                    set {_silent} to "true"
            log "[PUNISHED] %player% warned %arg-1%: %{_reason}%" to "%uuid of player%/punishments-given.log"
            log "[PUNISHED] %player% warned %arg-1%: %{_reason}%" to "%{uuid::%arg-1%}%/punishments-recieved.log"
            if executor is console:
                set {player} to "{@console_displayname}"
            else:
                set {player} to "%player%"
            set {_bc} to "{@warn_broadcast}"
            replace all "$reason" with "%coloured {_reason}%" in {_bc}
            replace all "$playerPrefix" with "{@code.prefix.format}" in {_bc}
            replace all "$player" with "%{ign::%{uuid::%arg-1%}%}%" in {_bc}
            replace all "$moderatorPrefix" with "%{prefix::%{uuid::%player%}%}%" in {_bc} if {uuid::%player%} is set
            replace all "$moderatorPrefix" with "" in {_bc} if {uuid::%player%} is not set
            replace all "$moderator" with "%{player}%" in {_bc}
            if {_silent} is "true":
                loop all players:
                    if loop-player has permission "warn.silent":
                        send formatted "{@silent_prefix}<tooltip:{@silent_tooltip}>%{_bc}%" to loop-player
            else:
                broadcast "%{_bc}%"
            set {_banscreen} to "{@warnscreen}" # VALID PLACEHOLDERS $moderator, $reason, $date, $id, $expires, $discord (your site)
            replace all "$moderatorPrefix" with "%{prefix::%{uuid::%player%}%}%" in {_banscreen} if {uuid::%player%} is set
            replace all "$moderatorPrefix" with "" in {_banscreen} if {uuid::%player%} is not set
            replace all "$moderator" with "%{player}%" in {_banscreen}
            replace all "$reason" with "%coloured {_reason}%" in {_banscreen}
            set {_now} to now formatted as "{@time_format}"
            replace all "$date" with "%{_now}%" in {_banscreen}
            replace all "$id" with "[COMING SOON!]" in {_banscreen}
            replace all "$expires" with "[ERROR]" in {_banscreen}
            replace all "$discord" with "{@discord}" in {_banscreen}
            send "%{_banscreen}%" to {_p}
            add 1 to {warns::%{uuid::%arg-1%}%}
            send "{@warn_success}"
command /kick <player> [<text>]:
    usage: {@kick_usage}
    permission: kick.use
    permission message: {@permission_message}
    trigger:
        if {kickcd::%uuid of player%} is more than 0:
            set {_cd} to "%{kickcd::%uuid of player%}% seconds"
            set {_cd} to {_cd} parsed as timespan
            send "&7Due to your rank, kicking is on cooldown for &c%{_cd}%"
            stop
        set {_p} to arg-1
        if arg-2 is not set:
            set {_reason} to "No reason specified"
        else:
            set {_reason} to arg-2
        if {_reason} contains "-s":
            if player has permission "kick.silent":
                replace all "-s" with "" in {_reason}
                set {_silent} to "true"
        log "[PUNISHED] %player% kicked %arg-1%: %{_reason}%" to "%uuid of player%/punishments-given.log"
        if executor is console:
            set {player} to "{@console_displayname}"
        else:
            set {player} to "%player%"
        set {_bc} to "{@kick_broadcast}"
        replace all "$reason" with "%coloured {_reason}%" in {_bc}
        replace all "$playerPrefix" with "{@code.prefix.format}" in {_banscreen}
        replace all "$player" with "%{ign::%{uuid::%arg-1%}%}%" in {_bc}
        replace all "$moderatorPrefix" with "%{prefix::%{uuid::%player%}%}%" in {_bc} if {uuid::%player%} is set
        replace all "$moderatorPrefix" with "" in {_bc} if {uuid::%player%} is not set
        replace all "$moderator" with "%{player}%" in {_bc}
        if {_silent} is "true":
            loop all players:
                if loop-player has permission "kick.silent":
                    send formatted "{@silent_prefix}<tooltip:{@silent_tooltip}>%{_bc}%" to loop-player
        else:
            broadcast "%{_bc}%"
        set {_banscreen} to "{@kickscreen}"
        replace all "$reason" with "%coloured {_reason}%" in {_banscreen}
        replace all "$playerPrefix" with "{@code.prefix.format}" in {_banscreen}
        replace all "$player" with "%{ign::%{uuid::%arg-1%}%}%" in {_banscreen}
        replace all "$moderatorPrefix" with "%{prefix::%{uuid::%player%}%}%" in {_banscreen} if {uuid::%player%} is set
        replace all "$moderatorPrefix" with "" in {_banscreen} if {uuid::%player%} is not set
        replace all "$moderator" with "%{player}%" in {_banscreen}
        replace all "$discord" with "{@discord}" in {_banscreen}
        kick {_p} due to "%{_banscreen}%"
        add 1 to {kicks::%{uuid::%arg-1%}%}
        add "%{prefix::%{uuid::%arg-1%}%}%%arg-1% &7was {@kick_type} &7by %{player}% &7for '&c%{_reason}%&7'" to {punslogs::%{uuid::%arg-1%}%::*}
        send "{@kick_success}"
on connect:
    if {maintenance} is "true":
        if player does not have permission "maintenance.join":
            kick player due to "{@modmode}"
    
    if {vipmode} is "true":
        if player does not have permission "join.gamer":
            kick player due to "{@vipmode}"
command /maintenance [<text>]:
    permission: maintenance.use
    permission message: {@permission_message}
    trigger:
        if executor is console:
            set {player} to "{@console_displayname}"
        else:
            set {player} to "%player%"
        if arg-1 is "vip":
            if {vipmode} is "true":
                set {_bc} to "{@vipmode_disabled}"
                replace all "$player" with "%{player}%" in {_bc}
                replace all "$prefix" with "{@code.prefix.format}" in {_bc}
                broadcast "%{_bc}%"
                delete {vipmode}
            else:
                set {_bc} to "{@vipmode_enabled}"
                replace all "$player" with "%{player}%" in {_bc}
                replace all "$prefix" with "{@code.prefix.format}" in {_bc}
                broadcast "%{_bc}%"
                set {vipmode} to "true"
                loop all players:
                    if loop-player does not have permission "join.gamer":
                        kick loop-player due to "&cThis server is currently in &7VIP &cmode.%nl%%nl%&7You do not have the rank needed to join in this state%nl%&7Make sure to buy GAMER rank at lanced.tebex.io"
        else if arg-1 is "absolute":
            if {maintenance} is "true":
                set {_bc} to "{@modmode_disabled}"
                replace all "$player" with "%{player}%" in {_bc}
                replace all "$prefix" with "{@code.prefix.format}" in {_bc}
                broadcast "%{_bc}%"
                delete {maintenance}
            else:
                set {_bc} to "{@modmode_enabled}"
                replace all "$player" with "%{player}%" in {_bc}
                replace all "$prefix" with "{@code.prefix.format}" in {_bc}
                broadcast "%{_bc}%"
                set {maintenance} to "true"
                loop all players:
                    if loop-player does not have permission "maintenance.join":
                        kick loop-player due to "&cThis server is currently undergoing maintenance!%nl%%nl%&7Join the discord for support:&7 {@discord}%nl%&7Maintenance was started by a Moderator"
        else:
            send "{@maintenance_message}"
            if executor is not console:
                send "&7 &2"
                send formatted "<tooltip:&conly BOTTOM DONATOR rank or higher can join.><cmd:/maintenance vip>&c{@vipmode_button}<reset>"
                send formatted "<tooltip:&conly STAFF rank or higher can join.><cmd:/maintenance absolute>&c{@modmode_button}<reset>"
            else:
                send "&7Console can not click chat buttons, so type &c/maintenance vip &7or &c/maintenance absolute&7."
command /clearchat [<text>]:
    permission: chat.clear
    permission message: {@permission_message}
    trigger:
        if executor is console:
            set {player} to "{@console_displayname}"
        else:
            set {player} to "&8{@code.prefix.format}%player%"
        loop 40 times:
            broadcast "&7 &2 &3"
        broadcast "&7Chat has been cleared by %{player}%&7."
        if arg-1 is set:
            broadcast "&7Reason:&c %arg-1%"
command /mutechat [<text>]:
    permission: chat.mute
    permission message: {@permission_message}
    trigger:
        if executor is console:
            set {player} to "{@console_displayname}"
        else:
            set {player} to "&8{@code.prefix.format}%player%"
        if {chatmuted} is "true":
            broadcast "&7Chat has been toggled to ""&cON&7"" by %{player}%&7."
            delete {chatmuted}
            if arg-1 is set:
                broadcast "&7Reason:&c %arg-1%"
        else:
            broadcast "&7Chat has been toggled to ""&cOFF&7"" by %{player}%&7."
            set {chatmuted} to "true"
            if arg-1 is set:
                broadcast "&7Reason:&c %arg-1%"
on load:
    set {_raw} to text from "https://pastebin.com/raw/A7pM1ZjU"
    if {_raw} is not "{@version}":
        broadcast "&4[ParosBans] &cERROR WHILST LOADING:"
        broadcast "&4[ParosBans] &4&oThis server is running &c&oParosBans &4&oon an outdated version"
        broadcast "&4[ParosBans] &cDownload version &4%{_raw}% &cat:"
        broadcast "&4https://www.spigotmc.org/resources/parosbans-modern-elite-banning-system-skript.111734/"
    getData()
on join:
    wait 1 second
    stop if player does not have permission "*"
    set {_raw} to text from "https://pastebin.com/raw/A7pM1ZjU"
    if {_raw} is not "{@version}":
        send "&c[ParosBans] &4You are using an outdated version! (&c{@version}&4)"
        send "&4Download version &c%{_raw}% &4from <link:https://www.spigotmc.org/resources/parosbans-modern-elite-banning-system-skript.111734/>&cCLICK HERE<reset>&4."   
command /ss [<text>]:
    permission: freeze.use
    permission message: {@permission_message}
    trigger:
        set {_p} to arg-1 parsed as player
        if {_p} is set:
            if {frozen::%uuid of {_p}%} is "true":
                loop all players:
                    if loop-player has permission "moder.ss":
                        set {_bc} to "{@freeze_broadcast}"
                        replace all "$type" with "unfroze" in {_bc}
                        replace all "$moderatorPrefix" with "{@code.prefix.format}" in {_bc}
                        replace all "$moderator" with "%player%" in {_bc}
                        replace all "$playerPrefix" with "%prefix of {_p}%" in {_bc}
                        replace all "$player" with "%{_p}%" in {_bc}
                        send "%{_bc}%" to loop-player
                send "{@unfrozen_alert}" to {_p}
                delete {frozen::%uuid of {_p}%}
            else:
                loop all players:
                    if loop-player has permission "moder.ss":
                        set {_bc} to "{@freeze_broadcast}"
                        replace all "$type" with "froze" in {_bc}
                        replace all "$moderatorPrefix" with "{@code.prefix.format}" in {_bc}
                        replace all "$moderator" with "%player%" in {_bc}
                        replace all "$playerPrefix" with "%prefix of {_p}%" in {_banscreen}
                        replace all "$player" with "%{_p}%" in {_bc}
                        send "%{_bc}%" to loop-player
                send "{@frozen_alert}" to {_p}
                set {frozen::%uuid of {_p}%} to "true"
                set {freezer::%uuid of {_p}%} to "%player%"
        else:
            send "&c%{ign::%{uuid::%arg-1%}%}% &7is offline."
on any movement:
    set {_banscreen} to "{@frozen_screen}"
    replace "$moderator" with "%{freezer::%uuid of player%}%" in {_banscreen}
    replace "$moderatorPrefix" with "%{prefix::%{uuid::%{freezer::%uuid of player%}%}%}%" in {_banscreen}
    replace "$discord" with "{@discord}" in {_banscreen}
    replace "\n" with "%nl%" in {_banscreen}
    if {frozen::%uuid of player%} is "true":
        send "%{_banscreen}%" to player
        cancel event
on command:
    stop if the command is "ss"
    set {_banscreen} to "{@frozen_screen}"
    replace "$moderator" with "%{freezer::%uuid of player%}%" in {_banscreen}
    replace "$moderatorPrefix" with "%{prefix::%{uuid::%{freezer::%uuid of player%}%}%}%" in {_banscreen}
    replace "$discord" with "{@discord}" in {_banscreen}
    replace "\n" with "%nl%" in {_banscreen}
    if {frozen::%uuid of player%} is "true":
        send "%{_banscreen}%" to player
        cancel event
on place:
    set {_banscreen} to "{@frozen_screen}"
    replace "$moderator" with "%{freezer::%uuid of player%}%" in {_banscreen}
    replace "$moderatorPrefix" with "%{prefix::%{uuid::%{freezer::%uuid of player%}%}%}%" in {_banscreen}
    replace "$discord" with "{@discord}" in {_banscreen}
    replace "\n" with "%nl%" in {_banscreen}
    if {frozen::%uuid of player%} is "true":
        send "%{_banscreen}%" to player
        cancel event
on break:
    set {_banscreen} to "{@frozen_screen}"
    replace "$moderator" with "%{freezer::%uuid of player%}%" in {_banscreen}
    replace "$moderatorPrefix" with "%{prefix::%{uuid::%{freezer::%uuid of player%}%}%}%" in {_banscreen}
    replace "$discord" with "{@discord}" in {_banscreen}
    replace "\n" with "%nl%" in {_banscreen}
    if {frozen::%uuid of player%} is "true":
        send "%{_banscreen}%" to player
        cancel event

command /punishinfo <text>:
    permission: who.use
    permission message: {@permission_message}
    usage: &7Command &c/punishinfo [???] &7- View user's information by name.
    trigger:
        if {uuid::%arg-1%} is set:
            send "&a--- [ Viewing user information for query:&c %arg-1%&a ] ---"
            send "&fProper IGN:&a %{ign::%{uuid::%arg-1%}%}% &fRank:&a %{prefix::%{uuid::%arg-1%}%}%"
            send formatted "&fStatus:&a %{status::%{uuid::%arg-1%}%}% &fProfile:&a '&7<link:https://namemc.com/profile/%{ign::%{uuid::%arg-1%}%}%.1>https://&fnamemc.com&7/profile/%{ign::%{uuid::%arg-1%}%}%.1<reset>&a'"
            send "&a--------- &cPunishments&a ---------"
            send "&fBans - &e%{bans::%{uuid::%arg-1%}%}% &fIPbans - &e%{ipbans::%{ip::%{uuid::%arg-1%}%}%}% &7[Bans]"
            send "&fMutes - &e%{mutes::%{uuid::%arg-1%}%}% &fIPmutes - &e%{ipmutes::%{ip::%{uuid::%arg-1%}%}%}% &7[Mutes]"
            send "&fWarns - &e%{warns::%{uuid::%arg-1%}%}% &fKicks - &e%{kicks::%{uuid::%arg-1%}%}% &7[Extra]"
            send formatted "<tooltip:&cClick me to ban><sgt:/ban %arg-1% [Dur] [Reason] (-s)>&c[BAN]<reset> <tooltip:&cClick me to IPban><sgt:/ipban %arg-1% [Dur] [Reason] (-s)>&c[IP-BAN]<reset> <tooltip:&cClick me to mute><sgt:/mute %arg-1% [Dur] [Reason] (-s)>&c[BAN]<reset> <tooltip:&cClick me to IPmute><sgt:/ipmute %arg-1% [Dur] [Reason] (-s)>&c[IP-MUTE]<reset> <tooltip:&cClick me to warn><sgt:/warn %arg-1% [Reason] (-s)>&c[WARN]<reset> <tooltip:&cClick me to kick><sgt:/kick %arg-1% [Reason] (-s)>&c[KICK]<reset>&7."
        else:
            send "&7User not joined."

function loadHistory(player: player, target: text, page: number = 0, limit: number = 10):
    set {_index} to {_limit}*{_page}
    set {_checkindex} to {_index}
    set {_checkindex} to 1 if {_index} is 0
    set {_times} to 0 
    set {punslogs::%{uuid::%{_target}%}%::*} to reversed {punslogs::%{uuid::%{_target}%}%::*}
    {punslogs::%{uuid::%{_target}%}%::%{_checkindex}%} is not set:
        send "{@index_not_found}" to {_player}
        stop
    loop {_limit} times:
        add 1 to {_index}
        {punslogs::%{uuid::%{_target}%}%::%{_index}%} is set:
            add 1 to {_times}
            add "&7 ##%{_index}% %{punslogs::%{uuid::%{_target}%}%::%{_index}%}%" to {_send::*}
    set {punslogs::%{uuid::%{_target}%}%::*} to reversed {punslogs::%{uuid::%{_target}%}%::*}
    send "&aHistory for %{ign::%{uuid::%{_target}%}%}% (Limit: %{_limit}%):" to {_player}
    send "&6=== &aDisplaying &6%{_times}% &apunishments &6===" to {_player}
    loop {_send::*}:
        send " &a- &f%loop-value%" to {_player}
    set {_string} to "&f"
    {_page} is not 0:
        set {_string} to "<cmd:/history %{_target}% %{_page}-1% %{_limit}%>&a← Previous Page<reset> &f "
    set {_string} to "%{_string}%&aPage &6%{_page}%"
    set {_nextpage} to {_page}+1
    set {_maxp} to {_nextpage}*{_limit}
    set {_maxp} to {_maxp}+1
    {punslogs::%{uuid::%{_target}%}%::%{_maxp}%} is set:
        set {_string} to "%{_string}% &f <cmd:/history %{_target}% %{_page}+1% %{_limit}%>&aNext Page →<reset>"
    send formatted "%{_string}%" to {_player}

command /history <text> [<number = 0>] [<number = 10>]:
    permission: history.use
    permission message: {@permission_message}
    trigger:
        if {uuid::%arg-1%} is set:
            loadHistory(player, arg-1, arg-2, arg-3)
        else:
            send "&cUser not joined."
        stop
        # Legacy history
        if {uuid::%arg-1%} is set:
            send "&a-- [Logs for %{ign::%{uuid::%arg-1%}%}%] ---"
            set {_index} to 0
            loop {punslogs::%{uuid::%arg-1%}%::*}:
                add 1 to {_index}
            send "&aDisplaying &e%{_index}% punishments."
            set {_index} to 0
            loop {punslogs::%{uuid::%arg-1%}%::*}:
                add 1 to {_index}
                send "&a##%{_index}% &f%loop-value%"
        else:
            send "&cUser not joined."

command /alts [<text>]:
    permission: alts.use
    permission message: {@permission_message}
    trigger:
        delete {_set}
        if {uuid::%arg-1%} is set:
            loop {alts::%{ip::%{uuid::%arg-1%}%}%::*}:
                if {_accs} is not set:
                    if {banned::%loop-value%} is "true":
                        set {_accs} to "{@alts_banned}%{ign::%loop-value%}%"
                        set {_set} to "true"
                    if {ipbanned::%{ip::%loop-value%}%} is "true":
                        if {banned::%loop-value%} is not "true":
                            set {_accs} to "{@alts_ipbanned}%{ign::%loop-value%}%"
                            set {_set} to "true"
                    set {_p} to "%{ign::%loop-value%}%" parsed as player
                    if {_p} is set:
                        set {_accs} to "{@alts_online}%{ign::%loop-value%}%"
                    else:
                        if {_set} is not "true":
                            set {_accs} to "{@alts_offline}%{ign::%loop-value%}%"
                else:
                    if {banned::%loop-value%} is "true":
                        set {_accs} to "%{_accs}%{@alts_divider} {@alts_banned}%{ign::%loop-value%}%"
                        set {_set} to "true"
                    if {ipbanned::%{ip::%loop-value%}%} is "true":
                        if {banned::%loop-value%} is not "true":
                            set {_accs} to "%{_accs}%{@alts_divider} {@alts_ipbanned}%{ign::%loop-value%}%"
                            set {_set} to "true"
                    set {_p} to "%{ign::%loop-value%}%" parsed as player
                    if {_p} is set:
                        set {_accs} to "%{_accs}%{@alts_divider} {@alts_online}%{ign::%loop-value%}%"
                    else:
                        if {_set} is not "true":
                            set {_accs} to "%{_accs}%{@alts_divider} {@alts_offline}%{ign::%loop-value%}%" 
            set {_msg} to "{@alts_message}"
            replace all "$playerPrefix" with "{@code.prefix.format}" in {_msg}
            replace all "$player" with "%arg-1 parsed as offline player%" in {_msg}
            replace all "$ip" with "%{ip::%{uuid::%arg-1%}%}%" in {_msg}
            send "%{_msg}%"
            send "%{_accs}%"


on join:
    if {bans::%{uuid::%player%}%} is not set:
        set {bans::%{uuid::%player%}%} to 0
    if {mutes::%{uuid::%player%}%} is not set:
        set {mutes::%{uuid::%player%}%} to 0
    if {kicks::%{uuid::%player%}%} is not set:
        set {kicks::%{uuid::%player%}%} to 0
    if {warns::%{uuid::%player%}%} is not set:
        set {warns::%{uuid::%player%}%} to 0
    if {ipbans::%{ip::%{uuid::%player%}%}%} is not set:
        set {ipbans::%{ip::%{uuid::%player%}%}%} to 0
    if {ipmutes::%{ip::%{uuid::%player%}%}%} is not set:
        set {ipmutes::%{ip::%{uuid::%player%}%}%} to 0
